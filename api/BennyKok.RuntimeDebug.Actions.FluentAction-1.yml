### YamlMime:ManagedReference
items:
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
  commentId: T:BennyKok.RuntimeDebug.Actions.FluentAction`1
  id: FluentAction`1
  parent: BennyKok.RuntimeDebug.Actions
  children:
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithLabel(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  langs:
  - csharp
  - vb
  name: FluentAction<T>
  nameWithType: FluentAction<T>
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>
  type: Class
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: FluentAction
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 6
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: >-
      [Serializable]

      public class FluentAction<T> : BaseAction where T : FluentAction<T>
    typeParameters:
    - id: T
    content.vb: >-
      <Serializable>

      Public Class FluentAction(Of T As FluentAction(Of T))
          Inherits BaseAction
  inheritance:
  - System.Object
  - BennyKok.RuntimeDebug.Actions.BaseAction
  derivedClasses:
  - BennyKok.RuntimeDebug.Actions.DebugActionButton
  - BennyKok.RuntimeDebug.Actions.DebugActionInput
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle
  inheritedMembers:
  - BennyKok.RuntimeDebug.Actions.BaseAction.path
  - BennyKok.RuntimeDebug.Actions.BaseAction.label
  - BennyKok.RuntimeDebug.Actions.BaseAction.id
  - BennyKok.RuntimeDebug.Actions.BaseAction.description
  - BennyKok.RuntimeDebug.Actions.BaseAction.key
  - BennyKok.RuntimeDebug.Actions.BaseAction.closePanelAfterTrigger
  - BennyKok.RuntimeDebug.Actions.BaseAction.actionColor
  - BennyKok.RuntimeDebug.Actions.BaseAction.unityAction
  - BennyKok.RuntimeDebug.Actions.BaseAction.action
  - BennyKok.RuntimeDebug.Actions.BaseAction.actionStatus
  - BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: FluentAction(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T)
  name.vb: FluentAction(Of T)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  id: WithId(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithId(String)
  nameWithType: FluentAction<T>.WithId(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithId
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 10
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual T WithId(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithId(id As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId*
  nameWithType.vb: FluentAction(Of T).WithId(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  id: WithAction(System.Action)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithAction(Action)
  nameWithType: FluentAction<T>.WithAction(Action)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction(System.Action)
  type: Method
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithAction
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 16
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual T WithAction(Action action)
    parameters:
    - id: action
      type: System.Action
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithAction(action As Action) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction*
  nameWithType.vb: FluentAction(Of T).WithAction(Action)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction(System.Action)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithLabel(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithLabel(System.String)
  id: WithLabel(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithLabel(String)
  nameWithType: FluentAction<T>.WithLabel(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithLabel(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithLabel
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 22
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual T WithLabel(string label)
    parameters:
    - id: label
      type: System.String
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithLabel(label As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithLabel*
  nameWithType.vb: FluentAction(Of T).WithLabel(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithLabel(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  id: WithDescription(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithDescription(String)
  nameWithType: FluentAction<T>.WithDescription(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithDescription
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 28
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual T WithDescription(string description)
    parameters:
    - id: description
      type: System.String
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithDescription(description As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription*
  nameWithType.vb: FluentAction(Of T).WithDescription(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
  id: WithPath(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithPath(String)
  nameWithType: FluentAction<T>.WithPath(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithPath(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithPath
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 34
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual T WithPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithPath(path As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath*
  nameWithType.vb: FluentAction(Of T).WithPath(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithPath(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  id: WithShortcutKey(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithShortcutKey(String)
  nameWithType: FluentAction<T>.WithShortcutKey(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithShortcutKey
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 40
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual T WithShortcutKey(string keycode)
    parameters:
    - id: keycode
      type: System.String
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithShortcutKey(keycode As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey*
  nameWithType.vb: FluentAction(Of T).WithShortcutKey(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  id: WithActionColor(UnityEngine.Color)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithActionColor(Color)
  nameWithType: FluentAction<T>.WithActionColor(Color)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor(UnityEngine.Color)
  type: Method
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithActionColor
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 46
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual T WithActionColor(Color actionColor)
    parameters:
    - id: actionColor
      type: UnityEngine.Color
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithActionColor(actionColor As Color) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor*
  nameWithType.vb: FluentAction(Of T).WithActionColor(Color)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor(UnityEngine.Color)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  id: WithClosePanelAfterTrigger(System.Boolean)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithClosePanelAfterTrigger(Boolean)
  nameWithType: FluentAction<T>.WithClosePanelAfterTrigger(Boolean)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger(System.Boolean)
  type: Method
  source:
    remote:
      path: Runtime/Actions/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithClosePanelAfterTrigger
    path: ../Assets/Plugins/Runtime Debug Action/Runtime/Actions/FluentAction.cs
    startLine: 52
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual T WithClosePanelAfterTrigger(bool closePanelAfterTrigger)
    parameters:
    - id: closePanelAfterTrigger
      type: System.Boolean
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithClosePanelAfterTrigger(closePanelAfterTrigger As Boolean) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger*
  nameWithType.vb: FluentAction(Of T).WithClosePanelAfterTrigger(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger(System.Boolean)
references:
- uid: BennyKok.RuntimeDebug.Actions
  commentId: N:BennyKok.RuntimeDebug.Actions
  name: BennyKok.RuntimeDebug.Actions
  nameWithType: BennyKok.RuntimeDebug.Actions
  fullName: BennyKok.RuntimeDebug.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BennyKok.RuntimeDebug.Actions.BaseAction
  commentId: T:BennyKok.RuntimeDebug.Actions.BaseAction
  parent: BennyKok.RuntimeDebug.Actions
  name: BaseAction
  nameWithType: BaseAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.path
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.path
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: path
  nameWithType: BaseAction.path
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.path
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.label
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.label
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: label
  nameWithType: BaseAction.label
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.label
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.id
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.id
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: id
  nameWithType: BaseAction.id
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.id
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.description
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.description
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: description
  nameWithType: BaseAction.description
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.description
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.key
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.key
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: key
  nameWithType: BaseAction.key
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.key
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.closePanelAfterTrigger
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.closePanelAfterTrigger
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: closePanelAfterTrigger
  nameWithType: BaseAction.closePanelAfterTrigger
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.closePanelAfterTrigger
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.actionColor
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.actionColor
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: actionColor
  nameWithType: BaseAction.actionColor
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.actionColor
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.unityAction
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.unityAction
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: unityAction
  nameWithType: BaseAction.unityAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.unityAction
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.action
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.action
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: action
  nameWithType: BaseAction.action
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.action
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.actionStatus
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.actionStatus
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: actionStatus
  nameWithType: BaseAction.actionStatus
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.actionStatus
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: ResolveAction()
  nameWithType: BaseAction.ResolveAction()
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId
  name: WithId
  nameWithType: FluentAction<T>.WithId
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId
  nameWithType.vb: FluentAction(Of T).WithId
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction
  name: WithAction
  nameWithType: FluentAction<T>.WithAction
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction
  nameWithType.vb: FluentAction(Of T).WithAction
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithLabel*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithLabel
  name: WithLabel
  nameWithType: FluentAction<T>.WithLabel
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithLabel
  nameWithType.vb: FluentAction(Of T).WithLabel
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithLabel
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription
  name: WithDescription
  nameWithType: FluentAction<T>.WithDescription
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription
  nameWithType.vb: FluentAction(Of T).WithDescription
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath
  name: WithPath
  nameWithType: FluentAction<T>.WithPath
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithPath
  nameWithType.vb: FluentAction(Of T).WithPath
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithPath
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey
  name: WithShortcutKey
  nameWithType: FluentAction<T>.WithShortcutKey
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey
  nameWithType.vb: FluentAction(Of T).WithShortcutKey
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor
  name: WithActionColor
  nameWithType: FluentAction<T>.WithActionColor
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor
  nameWithType.vb: FluentAction(Of T).WithActionColor
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger
  name: WithClosePanelAfterTrigger
  nameWithType: FluentAction<T>.WithClosePanelAfterTrigger
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger
  nameWithType.vb: FluentAction(Of T).WithClosePanelAfterTrigger
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
