### YamlMime:ManagedReference
items:
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
  commentId: T:BennyKok.RuntimeDebug.Actions.FluentAction`1
  id: FluentAction`1
  parent: BennyKok.RuntimeDebug.Actions
  children:
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  langs:
  - csharp
  - vb
  name: FluentAction<T>
  nameWithType: FluentAction<T>
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>
  type: Class
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: FluentAction
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 9
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nBase debug action class that has common fluent methods\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class FluentAction<T> : BaseDebugAction where T : FluentAction<T>
    typeParameters:
    - id: T
    content.vb: >-
      <Serializable>

      Public Class FluentAction(Of T As FluentAction(Of T))
          Inherits BaseDebugAction
  inheritance:
  - System.Object
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction
  derivedClasses:
  - BennyKok.RuntimeDebug.Actions.DebugActionButton
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum
  - BennyKok.RuntimeDebug.Actions.DebugActionFlag
  - BennyKok.RuntimeDebug.Actions.DebugActionInput
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle
  inheritedMembers:
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: FluentAction(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T)
  name.vb: FluentAction(Of T)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  id: WithId(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithId(String)
  nameWithType: FluentAction<T>.WithId(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithId
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 18
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nAssign specific id to the action, can be use for unregistering.\n"
  example: []
  syntax:
    content: public virtual T WithId(string id)
    parameters:
    - id: id
      type: System.String
      description: Id of the action
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithId(id As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId*
  nameWithType.vb: FluentAction(Of T).WithId(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  id: WithAction(System.Action)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithAction(Action)
  nameWithType: FluentAction<T>.WithAction(Action)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction(System.Action)
  type: Method
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithAction
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 28
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nAssign primary action\n"
  example: []
  syntax:
    content: public virtual T WithAction(Action action)
    parameters:
    - id: action
      type: System.Action
      description: ''
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithAction(action As Action) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction*
  nameWithType.vb: FluentAction(Of T).WithAction(Action)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction(System.Action)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  id: WithName(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithName(String)
  nameWithType: FluentAction<T>.WithName(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithName(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithName
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 39
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nThe name to be displayed in the debug menu\n"
  example: []
  syntax:
    content: public virtual T WithName(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Overridable Function WithName(name As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName*
  nameWithType.vb: FluentAction(Of T).WithName(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithName(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  id: WithDescription(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithDescription(String)
  nameWithType: FluentAction<T>.WithDescription(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithDescription
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 49
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nThe description of this action to be displayed in the tooltip panel\n"
  example: []
  syntax:
    content: public virtual T WithDescription(string description)
    parameters:
    - id: description
      type: System.String
      description: ''
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithDescription(description As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription*
  nameWithType.vb: FluentAction(Of T).WithDescription(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  id: WithGroup(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithGroup(String)
  nameWithType: FluentAction<T>.WithGroup(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithGroup(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithGroup
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 59
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nThe group this action belongs  to\n"
  example: []
  syntax:
    content: public virtual T WithGroup(string group)
    parameters:
    - id: group
      type: System.String
      description: ''
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithGroup(group As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup*
  nameWithType.vb: FluentAction(Of T).WithGroup(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithGroup(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  id: WithShortcutKey(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithShortcutKey(String)
  nameWithType: FluentAction<T>.WithShortcutKey(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithShortcutKey
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 69
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nA shortcut keyboard key to trigger this action when the debug menu is not visible, see https://docs.unity3d.com/Manual/class-InputManager.html for availble key names \n"
  example: []
  syntax:
    content: public virtual T WithShortcutKey(string keycode)
    parameters:
    - id: keycode
      type: System.String
      description: ''
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithShortcutKey(keycode As String) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey*
  nameWithType.vb: FluentAction(Of T).WithShortcutKey(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey(System.String)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  id: WithActionColor(UnityEngine.Color)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithActionColor(Color)
  nameWithType: FluentAction<T>.WithActionColor(Color)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor(UnityEngine.Color)
  type: Method
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithActionColor
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 79
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nThe tint color for this action displayed in the debug menu\n"
  example: []
  syntax:
    content: public virtual T WithActionColor(Color actionColor)
    parameters:
    - id: actionColor
      type: UnityEngine.Color
      description: ''
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithActionColor(actionColor As Color) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor*
  nameWithType.vb: FluentAction(Of T).WithActionColor(Color)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor(UnityEngine.Color)
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  id: WithClosePanelAfterTrigger(System.Boolean)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction`1
  langs:
  - csharp
  - vb
  name: WithClosePanelAfterTrigger(Boolean)
  nameWithType: FluentAction<T>.WithClosePanelAfterTrigger(Boolean)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger(System.Boolean)
  type: Method
  source:
    remote:
      path: Runtime/Actions/Base/FluentAction.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithClosePanelAfterTrigger
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/Base/FluentAction.cs
    startLine: 89
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nShould the debug menu be closed after the action was triggered?\n"
  example: []
  syntax:
    content: public virtual T WithClosePanelAfterTrigger(bool closePanelAfterTrigger = true)
    parameters:
    - id: closePanelAfterTrigger
      type: System.Boolean
      description: ''
    return:
      type: '{T}'
    content.vb: Public Overridable Function WithClosePanelAfterTrigger(closePanelAfterTrigger As Boolean = True) As T
  overload: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger*
  nameWithType.vb: FluentAction(Of T).WithClosePanelAfterTrigger(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger(System.Boolean)
references:
- uid: BennyKok.RuntimeDebug.Actions
  commentId: N:BennyKok.RuntimeDebug.Actions
  name: BennyKok.RuntimeDebug.Actions
  nameWithType: BennyKok.RuntimeDebug.Actions
  fullName: BennyKok.RuntimeDebug.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  commentId: T:BennyKok.RuntimeDebug.Actions.BaseDebugAction
  parent: BennyKok.RuntimeDebug.Actions
  name: BaseDebugAction
  nameWithType: BaseDebugAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: group
  nameWithType: BaseDebugAction.group
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: name
  nameWithType: BaseDebugAction.name
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: id
  nameWithType: BaseDebugAction.id
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: description
  nameWithType: BaseDebugAction.description
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: shortcutKey
  nameWithType: BaseDebugAction.shortcutKey
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: closePanelAfterTrigger
  nameWithType: BaseDebugAction.closePanelAfterTrigger
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: actionColor
  nameWithType: BaseDebugAction.actionColor
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: unityAction
  nameWithType: BaseDebugAction.unityAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: action
  nameWithType: BaseDebugAction.action
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: actionStatus
  nameWithType: BaseDebugAction.actionStatus
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: ResolveAction()
  nameWithType: BaseDebugAction.ResolveAction()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseDebugAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseDebugAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: CanDisplayAction()
  nameWithType: BaseDebugAction.CanDisplayAction()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
    name: CanDisplayAction
    nameWithType: BaseDebugAction.CanDisplayAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
    name: CanDisplayAction
    nameWithType: BaseDebugAction.CanDisplayAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: GetDescription()
  nameWithType: BaseDebugAction.GetDescription()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
    name: GetDescription
    nameWithType: BaseDebugAction.GetDescription
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
    name: GetDescription
    nameWithType: BaseDebugAction.GetDescription
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: Setup()
  nameWithType: BaseDebugAction.Setup()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
    name: Setup
    nameWithType: BaseDebugAction.Setup
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
    name: Setup
    nameWithType: BaseDebugAction.Setup
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId
  name: WithId
  nameWithType: FluentAction<T>.WithId
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId
  nameWithType.vb: FluentAction(Of T).WithId
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction
  name: WithAction
  nameWithType: FluentAction<T>.WithAction
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction
  nameWithType.vb: FluentAction(Of T).WithAction
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName
  name: WithName
  nameWithType: FluentAction<T>.WithName
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithName
  nameWithType.vb: FluentAction(Of T).WithName
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithName
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription
  name: WithDescription
  nameWithType: FluentAction<T>.WithDescription
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription
  nameWithType.vb: FluentAction(Of T).WithDescription
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup
  name: WithGroup
  nameWithType: FluentAction<T>.WithGroup
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithGroup
  nameWithType.vb: FluentAction(Of T).WithGroup
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithGroup
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey
  name: WithShortcutKey
  nameWithType: FluentAction<T>.WithShortcutKey
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey
  nameWithType.vb: FluentAction(Of T).WithShortcutKey
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor
  name: WithActionColor
  nameWithType: FluentAction<T>.WithActionColor
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor
  nameWithType.vb: FluentAction(Of T).WithActionColor
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger
  name: WithClosePanelAfterTrigger
  nameWithType: FluentAction<T>.WithClosePanelAfterTrigger
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger
  nameWithType.vb: FluentAction(Of T).WithClosePanelAfterTrigger
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
