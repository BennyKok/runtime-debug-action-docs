### YamlMime:ManagedReference
items:
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  commentId: T:BennyKok.RuntimeDebug.Actions.DebugActionToggle
  id: DebugActionToggle
  parent: BennyKok.RuntimeDebug.Actions
  children:
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionGet
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionSet
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionSwitch
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.isOn
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnAfterDeserialize
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnBeforeSerialize
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.ResolveAction
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.unityActionSwitch
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet(System.Func{System.Boolean})
  - BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet(System.Action{System.Boolean})
  langs:
  - csharp
  - vb
  name: DebugActionToggle
  nameWithType: DebugActionToggle
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  type: Class
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: DebugActionToggle
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 6
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: >-
      [Serializable]

      public class DebugActionToggle : FluentAction<DebugActionToggle>, ISerializationCallbackReceiver
    content.vb: >-
      <Serializable>

      Public Class DebugActionToggle
          Inherits FluentAction(Of DebugActionToggle)
          Implements ISerializationCallbackReceiver
  inheritance:
  - System.Object
  - BennyKok.RuntimeDebug.Actions.BaseAction
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  inheritedMembers:
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithId(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithAction(System.Action)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithName(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithDescription(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithPath(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithShortcutKey(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithActionColor(UnityEngine.Color)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithClosePanelAfterTrigger(System.Boolean)
  - BennyKok.RuntimeDebug.Actions.BaseAction.path
  - BennyKok.RuntimeDebug.Actions.BaseAction.name
  - BennyKok.RuntimeDebug.Actions.BaseAction.id
  - BennyKok.RuntimeDebug.Actions.BaseAction.description
  - BennyKok.RuntimeDebug.Actions.BaseAction.key
  - BennyKok.RuntimeDebug.Actions.BaseAction.closePanelAfterTrigger
  - BennyKok.RuntimeDebug.Actions.BaseAction.actionColor
  - BennyKok.RuntimeDebug.Actions.BaseAction.unityAction
  - BennyKok.RuntimeDebug.Actions.BaseAction.action
  - BennyKok.RuntimeDebug.Actions.BaseAction.actionStatus
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.isOn
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionToggle.isOn
  id: isOn
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: isOn
  nameWithType: DebugActionToggle.isOn
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.isOn
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: isOn
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 9
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public bool isOn
    return:
      type: System.Boolean
    content.vb: Public isOn As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionSwitch
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionSwitch
  id: actionSwitch
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: actionSwitch
  nameWithType: DebugActionToggle.actionSwitch
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionSwitch
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: actionSwitch
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 11
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public Action actionSwitch
    return:
      type: System.Action
    content.vb: Public actionSwitch As Action
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.unityActionSwitch
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionToggle.unityActionSwitch
  id: unityActionSwitch
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: unityActionSwitch
  nameWithType: DebugActionToggle.unityActionSwitch
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.unityActionSwitch
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: unityActionSwitch
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 12
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public UnityEvent unityActionSwitch
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: Public unityActionSwitch As UnityEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionSet
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionSet
  id: actionSet
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: actionSet
  nameWithType: DebugActionToggle.actionSet
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionSet
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: actionSet
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 14
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public Action<bool> actionSet
    return:
      type: System.Action{System.Boolean}
    content.vb: Public actionSet As Action(Of Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionGet
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionGet
  id: actionGet
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: actionGet
  nameWithType: DebugActionToggle.actionGet
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.actionGet
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: actionGet
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 15
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public Func<bool> actionGet
    return:
      type: System.Func{System.Boolean}
    content.vb: Public actionGet As Func(Of Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet(System.Func{System.Boolean})
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet(System.Func{System.Boolean})
  id: WithActionGet(System.Func{System.Boolean})
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: WithActionGet(Func<Boolean>)
  nameWithType: DebugActionToggle.WithActionGet(Func<Boolean>)
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet(System.Func<System.Boolean>)
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithActionGet
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 19
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public DebugActionToggle WithActionGet(Func<bool> actionGet)
    parameters:
    - id: actionGet
      type: System.Func{System.Boolean}
    return:
      type: BennyKok.RuntimeDebug.Actions.DebugActionToggle
    content.vb: Public Function WithActionGet(actionGet As Func(Of Boolean)) As DebugActionToggle
  overload: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet*
  nameWithType.vb: DebugActionToggle.WithActionGet(Func(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet(System.Func(Of System.Boolean))
  name.vb: WithActionGet(Func(Of Boolean))
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet(System.Action{System.Boolean})
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet(System.Action{System.Boolean})
  id: WithActionSet(System.Action{System.Boolean})
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: WithActionSet(Action<Boolean>)
  nameWithType: DebugActionToggle.WithActionSet(Action<Boolean>)
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet(System.Action<System.Boolean>)
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithActionSet
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 26
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public DebugActionToggle WithActionSet(Action<bool> actionSet)
    parameters:
    - id: actionSet
      type: System.Action{System.Boolean}
    return:
      type: BennyKok.RuntimeDebug.Actions.DebugActionToggle
    content.vb: Public Function WithActionSet(actionSet As Action(Of Boolean)) As DebugActionToggle
  overload: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet*
  nameWithType.vb: DebugActionToggle.WithActionSet(Action(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet(System.Action(Of System.Boolean))
  name.vb: WithActionSet(Action(Of Boolean))
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.ResolveAction
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionToggle.ResolveAction
  id: ResolveAction
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: ResolveAction()
  nameWithType: DebugActionToggle.ResolveAction()
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.ResolveAction()
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: ResolveAction
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 32
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public override void ResolveAction()
    content.vb: Public Overrides Sub ResolveAction
  overridden: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  overload: BennyKok.RuntimeDebug.Actions.DebugActionToggle.ResolveAction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnBeforeSerialize
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnBeforeSerialize
  id: OnBeforeSerialize
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: OnBeforeSerialize()
  nameWithType: DebugActionToggle.OnBeforeSerialize()
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnBeforeSerialize()
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: OnBeforeSerialize
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 38
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public void OnBeforeSerialize()
    content.vb: Public Sub OnBeforeSerialize
  overload: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnBeforeSerialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnAfterDeserialize
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnAfterDeserialize
  id: OnAfterDeserialize
  parent: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  langs:
  - csharp
  - vb
  name: OnAfterDeserialize()
  nameWithType: DebugActionToggle.OnAfterDeserialize()
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnAfterDeserialize()
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionToggle.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: OnAfterDeserialize
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionToggle.cs
    startLine: 40
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public void OnAfterDeserialize()
    content.vb: Public Sub OnAfterDeserialize
  overload: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnAfterDeserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BennyKok.RuntimeDebug.Actions
  commentId: N:BennyKok.RuntimeDebug.Actions
  name: BennyKok.RuntimeDebug.Actions
  nameWithType: BennyKok.RuntimeDebug.Actions
  fullName: BennyKok.RuntimeDebug.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BennyKok.RuntimeDebug.Actions.BaseAction
  commentId: T:BennyKok.RuntimeDebug.Actions.BaseAction
  parent: BennyKok.RuntimeDebug.Actions
  name: BaseAction
  nameWithType: BaseAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  commentId: T:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  parent: BennyKok.RuntimeDebug.Actions
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1
  name: FluentAction<DebugActionToggle>
  nameWithType: FluentAction<DebugActionToggle>
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>
  nameWithType.vb: FluentAction(Of DebugActionToggle)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle)
  name.vb: FluentAction(Of DebugActionToggle)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle
    name: DebugActionToggle
    nameWithType: DebugActionToggle
    fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle
    name: DebugActionToggle
    nameWithType: DebugActionToggle
    fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithId(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithId(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  name: WithId(String)
  nameWithType: FluentAction<DebugActionToggle>.WithId(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithId(System.String)
  nameWithType.vb: FluentAction(Of DebugActionToggle).WithId(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithId(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction<DebugActionToggle>.WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction(Of DebugActionToggle).WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithAction(System.Action)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithAction(System.Action)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  name: WithAction(Action)
  nameWithType: FluentAction<DebugActionToggle>.WithAction(Action)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithAction(System.Action)
  nameWithType.vb: FluentAction(Of DebugActionToggle).WithAction(Action)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithAction(System.Action)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction<DebugActionToggle>.WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction(Of DebugActionToggle).WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithName(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithName(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  name: WithName(String)
  nameWithType: FluentAction<DebugActionToggle>.WithName(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithName(System.String)
  nameWithType.vb: FluentAction(Of DebugActionToggle).WithName(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithName(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction<DebugActionToggle>.WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction(Of DebugActionToggle).WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithDescription(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithDescription(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  name: WithDescription(String)
  nameWithType: FluentAction<DebugActionToggle>.WithDescription(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithDescription(System.String)
  nameWithType.vb: FluentAction(Of DebugActionToggle).WithDescription(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithDescription(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction<DebugActionToggle>.WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction(Of DebugActionToggle).WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithPath(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithPath(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
  name: WithPath(String)
  nameWithType: FluentAction<DebugActionToggle>.WithPath(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithPath(System.String)
  nameWithType.vb: FluentAction(Of DebugActionToggle).WithPath(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithPath(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
    name: WithPath
    nameWithType: FluentAction<DebugActionToggle>.WithPath
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
    name: WithPath
    nameWithType: FluentAction(Of DebugActionToggle).WithPath
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithShortcutKey(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithShortcutKey(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  name: WithShortcutKey(String)
  nameWithType: FluentAction<DebugActionToggle>.WithShortcutKey(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithShortcutKey(System.String)
  nameWithType.vb: FluentAction(Of DebugActionToggle).WithShortcutKey(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithShortcutKey(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction<DebugActionToggle>.WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction(Of DebugActionToggle).WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithActionColor(UnityEngine.Color)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithActionColor(UnityEngine.Color)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  name: WithActionColor(Color)
  nameWithType: FluentAction<DebugActionToggle>.WithActionColor(Color)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithActionColor(UnityEngine.Color)
  nameWithType.vb: FluentAction(Of DebugActionToggle).WithActionColor(Color)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithActionColor(UnityEngine.Color)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction<DebugActionToggle>.WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction(Of DebugActionToggle).WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithClosePanelAfterTrigger(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}.WithClosePanelAfterTrigger(System.Boolean)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionToggle}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  name: WithClosePanelAfterTrigger(Boolean)
  nameWithType: FluentAction<DebugActionToggle>.WithClosePanelAfterTrigger(Boolean)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithClosePanelAfterTrigger(System.Boolean)
  nameWithType.vb: FluentAction(Of DebugActionToggle).WithClosePanelAfterTrigger(Boolean)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithClosePanelAfterTrigger(System.Boolean)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction<DebugActionToggle>.WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionToggle>.WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction(Of DebugActionToggle).WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionToggle).WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.path
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.path
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: path
  nameWithType: BaseAction.path
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.path
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.name
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.name
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: name
  nameWithType: BaseAction.name
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.name
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.id
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.id
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: id
  nameWithType: BaseAction.id
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.id
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.description
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.description
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: description
  nameWithType: BaseAction.description
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.description
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.key
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.key
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: key
  nameWithType: BaseAction.key
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.key
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.closePanelAfterTrigger
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.closePanelAfterTrigger
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: closePanelAfterTrigger
  nameWithType: BaseAction.closePanelAfterTrigger
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.closePanelAfterTrigger
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.actionColor
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.actionColor
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: actionColor
  nameWithType: BaseAction.actionColor
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.actionColor
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.unityAction
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.unityAction
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: unityAction
  nameWithType: BaseAction.unityAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.unityAction
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.action
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.action
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: action
  nameWithType: BaseAction.action
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.action
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.actionStatus
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseAction.actionStatus
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: actionStatus
  nameWithType: BaseAction.actionStatus
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.actionStatus
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
  commentId: T:BennyKok.RuntimeDebug.Actions.FluentAction`1
  name: FluentAction<T>
  nameWithType: FluentAction<T>
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>
  nameWithType.vb: FluentAction(Of T)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T)
  name.vb: FluentAction(Of T)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  isExternal: true
  name: WithId(String)
  nameWithType: FluentAction<T>.WithId(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId(System.String)
  nameWithType.vb: FluentAction(Of T).WithId(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction<T>.WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction(Of T).WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  isExternal: true
  name: WithAction(Action)
  nameWithType: FluentAction<T>.WithAction(Action)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction(System.Action)
  nameWithType.vb: FluentAction(Of T).WithAction(Action)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction(System.Action)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction<T>.WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction(Of T).WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  isExternal: true
  name: WithName(String)
  nameWithType: FluentAction<T>.WithName(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithName(System.String)
  nameWithType.vb: FluentAction(Of T).WithName(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithName(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction<T>.WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction(Of T).WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  isExternal: true
  name: WithDescription(String)
  nameWithType: FluentAction<T>.WithDescription(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription(System.String)
  nameWithType.vb: FluentAction(Of T).WithDescription(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction<T>.WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction(Of T).WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
  isExternal: true
  name: WithPath(String)
  nameWithType: FluentAction<T>.WithPath(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithPath(System.String)
  nameWithType.vb: FluentAction(Of T).WithPath(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithPath(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
    name: WithPath
    nameWithType: FluentAction<T>.WithPath
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithPath(System.String)
    name: WithPath
    nameWithType: FluentAction(Of T).WithPath
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  isExternal: true
  name: WithShortcutKey(String)
  nameWithType: FluentAction<T>.WithShortcutKey(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey(System.String)
  nameWithType.vb: FluentAction(Of T).WithShortcutKey(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction<T>.WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction(Of T).WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  isExternal: true
  name: WithActionColor(Color)
  nameWithType: FluentAction<T>.WithActionColor(Color)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor(UnityEngine.Color)
  nameWithType.vb: FluentAction(Of T).WithActionColor(Color)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor(UnityEngine.Color)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction<T>.WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction(Of T).WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  isExternal: true
  name: WithClosePanelAfterTrigger(Boolean)
  nameWithType: FluentAction<T>.WithClosePanelAfterTrigger(Boolean)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger(System.Boolean)
  nameWithType.vb: FluentAction(Of T).WithClosePanelAfterTrigger(Boolean)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger(System.Boolean)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction<T>.WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction(Of T).WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: UnityEngine.Events.UnityEvent
  commentId: T:UnityEngine.Events.UnityEvent
  parent: UnityEngine.Events
  isExternal: true
  name: UnityEvent
  nameWithType: UnityEvent
  fullName: UnityEngine.Events.UnityEvent
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
- uid: System.Action{System.Boolean}
  commentId: T:System.Action{System.Boolean}
  parent: System
  definition: System.Action`1
  name: Action<Boolean>
  nameWithType: Action<Boolean>
  fullName: System.Action<System.Boolean>
  nameWithType.vb: Action(Of Boolean)
  fullName.vb: System.Action(Of System.Boolean)
  name.vb: Action(Of Boolean)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet
  name: WithActionGet
  nameWithType: DebugActionToggle.WithActionGet
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionGet
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle
  commentId: T:BennyKok.RuntimeDebug.Actions.DebugActionToggle
  parent: BennyKok.RuntimeDebug.Actions
  name: DebugActionToggle
  nameWithType: DebugActionToggle
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet
  name: WithActionSet
  nameWithType: DebugActionToggle.WithActionSet
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.WithActionSet
- uid: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  parent: BennyKok.RuntimeDebug.Actions.BaseAction
  name: ResolveAction()
  nameWithType: BaseAction.ResolveAction()
  fullName: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.ResolveAction*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionToggle.ResolveAction
  name: ResolveAction
  nameWithType: DebugActionToggle.ResolveAction
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.ResolveAction
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnBeforeSerialize*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnBeforeSerialize
  name: OnBeforeSerialize
  nameWithType: DebugActionToggle.OnBeforeSerialize
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnBeforeSerialize
- uid: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnAfterDeserialize*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnAfterDeserialize
  name: OnAfterDeserialize
  nameWithType: DebugActionToggle.OnAfterDeserialize
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionToggle.OnAfterDeserialize
