### YamlMime:ManagedReference
items:
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput
  commentId: T:BennyKok.RuntimeDebug.Actions.DebugActionInput
  id: DebugActionInput
  parent: BennyKok.RuntimeDebug.Actions
  children:
  - BennyKok.RuntimeDebug.Actions.DebugActionInput.CanDisplayAction
  - BennyKok.RuntimeDebug.Actions.DebugActionInput.CurrentInputResponse
  - BennyKok.RuntimeDebug.Actions.DebugActionInput.GetDescription
  - BennyKok.RuntimeDebug.Actions.DebugActionInput.inputAction
  - BennyKok.RuntimeDebug.Actions.DebugActionInput.inputQuery
  - BennyKok.RuntimeDebug.Actions.DebugActionInput.ResolveAction
  - BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction(System.Action{BennyKok.RuntimeDebug.DebugInput.InputResponse})
  - BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputQuery(BennyKok.RuntimeDebug.DebugInput.InputQuery)
  langs:
  - csharp
  - vb
  name: DebugActionInput
  nameWithType: DebugActionInput
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput
  type: Class
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: DebugActionInput
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 11
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: >-
      [Serializable]

      public class DebugActionInput : FluentAction<DebugActionInput>
    content.vb: >-
      <Serializable>

      Public Class DebugActionInput
          Inherits FluentAction(Of DebugActionInput)
  inheritance:
  - System.Object
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  inheritedMembers:
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithId(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithAction(System.Action)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithName(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithDescription(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithGroup(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithShortcutKey(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithActionColor(UnityEngine.Color)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithClosePanelAfterTrigger(System.Boolean)
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.inputQuery
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionInput.inputQuery
  id: inputQuery
  parent: BennyKok.RuntimeDebug.Actions.DebugActionInput
  langs:
  - csharp
  - vb
  name: inputQuery
  nameWithType: DebugActionInput.inputQuery
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.inputQuery
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: inputQuery
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 15
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: >-
      [Title("Input", 3)]

      public InputQuery inputQuery
    return:
      type: BennyKok.RuntimeDebug.DebugInput.InputQuery
    content.vb: >-
      <Title("Input", 3)>

      Public inputQuery As InputQuery
  attributes:
  - type: BennyKok.RuntimeDebug.Utils.TitleAttribute
    ctor: BennyKok.RuntimeDebug.Utils.TitleAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Input
    - type: System.Int32
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.inputAction
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionInput.inputAction
  id: inputAction
  parent: BennyKok.RuntimeDebug.Actions.DebugActionInput
  langs:
  - csharp
  - vb
  name: inputAction
  nameWithType: DebugActionInput.inputAction
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.inputAction
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: inputAction
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 17
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public Action<InputResponse> inputAction
    return:
      type: System.Action{BennyKok.RuntimeDebug.DebugInput.InputResponse}
    content.vb: Public inputAction As Action(Of InputResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.CurrentInputResponse
  commentId: P:BennyKok.RuntimeDebug.Actions.DebugActionInput.CurrentInputResponse
  id: CurrentInputResponse
  parent: BennyKok.RuntimeDebug.Actions.DebugActionInput
  langs:
  - csharp
  - vb
  name: CurrentInputResponse
  nameWithType: DebugActionInput.CurrentInputResponse
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.CurrentInputResponse
  type: Property
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: CurrentInputResponse
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 19
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public InputResponse CurrentInputResponse { get; }
    parameters: []
    return:
      type: BennyKok.RuntimeDebug.DebugInput.InputResponse
    content.vb: Public ReadOnly Property CurrentInputResponse As InputResponse
  overload: BennyKok.RuntimeDebug.Actions.DebugActionInput.CurrentInputResponse*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.ResolveAction
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionInput.ResolveAction
  id: ResolveAction
  parent: BennyKok.RuntimeDebug.Actions.DebugActionInput
  langs:
  - csharp
  - vb
  name: ResolveAction()
  nameWithType: DebugActionInput.ResolveAction()
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.ResolveAction()
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: ResolveAction
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 26
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public override void ResolveAction()
    content.vb: Public Overrides Sub ResolveAction
  overridden: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  overload: BennyKok.RuntimeDebug.Actions.DebugActionInput.ResolveAction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.CanDisplayAction
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionInput.CanDisplayAction
  id: CanDisplayAction
  parent: BennyKok.RuntimeDebug.Actions.DebugActionInput
  langs:
  - csharp
  - vb
  name: CanDisplayAction()
  nameWithType: DebugActionInput.CanDisplayAction()
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.CanDisplayAction()
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: CanDisplayAction
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 64
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public override bool CanDisplayAction()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanDisplayAction As Boolean
  overridden: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  overload: BennyKok.RuntimeDebug.Actions.DebugActionInput.CanDisplayAction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.GetDescription
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionInput.GetDescription
  id: GetDescription
  parent: BennyKok.RuntimeDebug.Actions.DebugActionInput
  langs:
  - csharp
  - vb
  name: GetDescription()
  nameWithType: DebugActionInput.GetDescription()
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.GetDescription()
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetDescription
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 69
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public override string GetDescription()
    return:
      type: System.String
    content.vb: Public Overrides Function GetDescription As String
  overridden: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  overload: BennyKok.RuntimeDebug.Actions.DebugActionInput.GetDescription*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction(System.Action{BennyKok.RuntimeDebug.DebugInput.InputResponse})
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction(System.Action{BennyKok.RuntimeDebug.DebugInput.InputResponse})
  id: WithInputAction(System.Action{BennyKok.RuntimeDebug.DebugInput.InputResponse})
  parent: BennyKok.RuntimeDebug.Actions.DebugActionInput
  langs:
  - csharp
  - vb
  name: WithInputAction(Action<InputResponse>)
  nameWithType: DebugActionInput.WithInputAction(Action<InputResponse>)
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction(System.Action<BennyKok.RuntimeDebug.DebugInput.InputResponse>)
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithInputAction
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 74
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public DebugActionInput WithInputAction(Action<InputResponse> inputAction)
    parameters:
    - id: inputAction
      type: System.Action{BennyKok.RuntimeDebug.DebugInput.InputResponse}
    return:
      type: BennyKok.RuntimeDebug.Actions.DebugActionInput
    content.vb: Public Function WithInputAction(inputAction As Action(Of InputResponse)) As DebugActionInput
  overload: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction*
  nameWithType.vb: DebugActionInput.WithInputAction(Action(Of InputResponse))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction(System.Action(Of BennyKok.RuntimeDebug.DebugInput.InputResponse))
  name.vb: WithInputAction(Action(Of InputResponse))
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputQuery(BennyKok.RuntimeDebug.DebugInput.InputQuery)
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputQuery(BennyKok.RuntimeDebug.DebugInput.InputQuery)
  id: WithInputQuery(BennyKok.RuntimeDebug.DebugInput.InputQuery)
  parent: BennyKok.RuntimeDebug.Actions.DebugActionInput
  langs:
  - csharp
  - vb
  name: WithInputQuery(InputQuery)
  nameWithType: DebugActionInput.WithInputQuery(InputQuery)
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputQuery(BennyKok.RuntimeDebug.DebugInput.InputQuery)
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionInput.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithInputQuery
    path: ../Assets/Plugins/unity-runtime-debug-action/Runtime/Actions/DebugActionInput.cs
    startLine: 80
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public DebugActionInput WithInputQuery(InputQuery inputQuery)
    parameters:
    - id: inputQuery
      type: BennyKok.RuntimeDebug.DebugInput.InputQuery
    return:
      type: BennyKok.RuntimeDebug.Actions.DebugActionInput
    content.vb: Public Function WithInputQuery(inputQuery As InputQuery) As DebugActionInput
  overload: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputQuery*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BennyKok.RuntimeDebug.Actions
  commentId: N:BennyKok.RuntimeDebug.Actions
  name: BennyKok.RuntimeDebug.Actions
  nameWithType: BennyKok.RuntimeDebug.Actions
  fullName: BennyKok.RuntimeDebug.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  commentId: T:BennyKok.RuntimeDebug.Actions.BaseDebugAction
  parent: BennyKok.RuntimeDebug.Actions
  name: BaseDebugAction
  nameWithType: BaseDebugAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  commentId: T:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  parent: BennyKok.RuntimeDebug.Actions
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1
  name: FluentAction<DebugActionInput>
  nameWithType: FluentAction<DebugActionInput>
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>
  nameWithType.vb: FluentAction(Of DebugActionInput)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput)
  name.vb: FluentAction(Of DebugActionInput)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.Actions.DebugActionInput
    name: DebugActionInput
    nameWithType: DebugActionInput
    fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.Actions.DebugActionInput
    name: DebugActionInput
    nameWithType: DebugActionInput
    fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithId(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithId(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  name: WithId(String)
  nameWithType: FluentAction<DebugActionInput>.WithId(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithId(System.String)
  nameWithType.vb: FluentAction(Of DebugActionInput).WithId(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithId(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction<DebugActionInput>.WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction(Of DebugActionInput).WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithAction(System.Action)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithAction(System.Action)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  name: WithAction(Action)
  nameWithType: FluentAction<DebugActionInput>.WithAction(Action)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithAction(System.Action)
  nameWithType.vb: FluentAction(Of DebugActionInput).WithAction(Action)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithAction(System.Action)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction<DebugActionInput>.WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction(Of DebugActionInput).WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithName(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithName(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  name: WithName(String)
  nameWithType: FluentAction<DebugActionInput>.WithName(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithName(System.String)
  nameWithType.vb: FluentAction(Of DebugActionInput).WithName(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithName(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction<DebugActionInput>.WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction(Of DebugActionInput).WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithDescription(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithDescription(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  name: WithDescription(String)
  nameWithType: FluentAction<DebugActionInput>.WithDescription(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithDescription(System.String)
  nameWithType.vb: FluentAction(Of DebugActionInput).WithDescription(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithDescription(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction<DebugActionInput>.WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction(Of DebugActionInput).WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithGroup(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithGroup(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  name: WithGroup(String)
  nameWithType: FluentAction<DebugActionInput>.WithGroup(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithGroup(System.String)
  nameWithType.vb: FluentAction(Of DebugActionInput).WithGroup(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithGroup(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
    name: WithGroup
    nameWithType: FluentAction<DebugActionInput>.WithGroup
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
    name: WithGroup
    nameWithType: FluentAction(Of DebugActionInput).WithGroup
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithShortcutKey(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithShortcutKey(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  name: WithShortcutKey(String)
  nameWithType: FluentAction<DebugActionInput>.WithShortcutKey(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithShortcutKey(System.String)
  nameWithType.vb: FluentAction(Of DebugActionInput).WithShortcutKey(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithShortcutKey(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction<DebugActionInput>.WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction(Of DebugActionInput).WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithActionColor(UnityEngine.Color)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithActionColor(UnityEngine.Color)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  name: WithActionColor(Color)
  nameWithType: FluentAction<DebugActionInput>.WithActionColor(Color)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithActionColor(UnityEngine.Color)
  nameWithType.vb: FluentAction(Of DebugActionInput).WithActionColor(Color)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithActionColor(UnityEngine.Color)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction<DebugActionInput>.WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction(Of DebugActionInput).WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithClosePanelAfterTrigger(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}.WithClosePanelAfterTrigger(System.Boolean)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionInput}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  name: WithClosePanelAfterTrigger(Boolean)
  nameWithType: FluentAction<DebugActionInput>.WithClosePanelAfterTrigger(Boolean)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithClosePanelAfterTrigger(System.Boolean)
  nameWithType.vb: FluentAction(Of DebugActionInput).WithClosePanelAfterTrigger(Boolean)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithClosePanelAfterTrigger(System.Boolean)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction<DebugActionInput>.WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionInput>.WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction(Of DebugActionInput).WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionInput).WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: group
  nameWithType: BaseDebugAction.group
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: name
  nameWithType: BaseDebugAction.name
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: id
  nameWithType: BaseDebugAction.id
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: description
  nameWithType: BaseDebugAction.description
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: shortcutKey
  nameWithType: BaseDebugAction.shortcutKey
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: closePanelAfterTrigger
  nameWithType: BaseDebugAction.closePanelAfterTrigger
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: actionColor
  nameWithType: BaseDebugAction.actionColor
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: unityAction
  nameWithType: BaseDebugAction.unityAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: action
  nameWithType: BaseDebugAction.action
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: actionStatus
  nameWithType: BaseDebugAction.actionStatus
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
  commentId: T:BennyKok.RuntimeDebug.Actions.FluentAction`1
  name: FluentAction<T>
  nameWithType: FluentAction<T>
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>
  nameWithType.vb: FluentAction(Of T)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T)
  name.vb: FluentAction(Of T)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  isExternal: true
  name: WithId(String)
  nameWithType: FluentAction<T>.WithId(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId(System.String)
  nameWithType.vb: FluentAction(Of T).WithId(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction<T>.WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction(Of T).WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  isExternal: true
  name: WithAction(Action)
  nameWithType: FluentAction<T>.WithAction(Action)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction(System.Action)
  nameWithType.vb: FluentAction(Of T).WithAction(Action)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction(System.Action)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction<T>.WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction(Of T).WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  isExternal: true
  name: WithName(String)
  nameWithType: FluentAction<T>.WithName(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithName(System.String)
  nameWithType.vb: FluentAction(Of T).WithName(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithName(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction<T>.WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction(Of T).WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  isExternal: true
  name: WithDescription(String)
  nameWithType: FluentAction<T>.WithDescription(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription(System.String)
  nameWithType.vb: FluentAction(Of T).WithDescription(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction<T>.WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction(Of T).WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  isExternal: true
  name: WithGroup(String)
  nameWithType: FluentAction<T>.WithGroup(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithGroup(System.String)
  nameWithType.vb: FluentAction(Of T).WithGroup(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithGroup(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
    name: WithGroup
    nameWithType: FluentAction<T>.WithGroup
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
    name: WithGroup
    nameWithType: FluentAction(Of T).WithGroup
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  isExternal: true
  name: WithShortcutKey(String)
  nameWithType: FluentAction<T>.WithShortcutKey(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey(System.String)
  nameWithType.vb: FluentAction(Of T).WithShortcutKey(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction<T>.WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction(Of T).WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  isExternal: true
  name: WithActionColor(Color)
  nameWithType: FluentAction<T>.WithActionColor(Color)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor(UnityEngine.Color)
  nameWithType.vb: FluentAction(Of T).WithActionColor(Color)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor(UnityEngine.Color)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction<T>.WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction(Of T).WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  isExternal: true
  name: WithClosePanelAfterTrigger(Boolean)
  nameWithType: FluentAction<T>.WithClosePanelAfterTrigger(Boolean)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger(System.Boolean)
  nameWithType.vb: FluentAction(Of T).WithClosePanelAfterTrigger(Boolean)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger(System.Boolean)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction<T>.WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction(Of T).WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.DebugInput.InputQuery
  commentId: T:BennyKok.RuntimeDebug.DebugInput.InputQuery
  parent: BennyKok.RuntimeDebug.DebugInput
  name: InputQuery
  nameWithType: InputQuery
  fullName: BennyKok.RuntimeDebug.DebugInput.InputQuery
- uid: BennyKok.RuntimeDebug.DebugInput
  commentId: N:BennyKok.RuntimeDebug.DebugInput
  name: BennyKok.RuntimeDebug.DebugInput
  nameWithType: BennyKok.RuntimeDebug.DebugInput
  fullName: BennyKok.RuntimeDebug.DebugInput
- uid: System.Action{BennyKok.RuntimeDebug.DebugInput.InputResponse}
  commentId: T:System.Action{BennyKok.RuntimeDebug.DebugInput.InputResponse}
  parent: System
  definition: System.Action`1
  name: Action<InputResponse>
  nameWithType: Action<InputResponse>
  fullName: System.Action<BennyKok.RuntimeDebug.DebugInput.InputResponse>
  nameWithType.vb: Action(Of InputResponse)
  fullName.vb: System.Action(Of BennyKok.RuntimeDebug.DebugInput.InputResponse)
  name.vb: Action(Of InputResponse)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.DebugInput.InputResponse
    name: InputResponse
    nameWithType: InputResponse
    fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.DebugInput.InputResponse
    name: InputResponse
    nameWithType: InputResponse
    fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.CurrentInputResponse*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionInput.CurrentInputResponse
  name: CurrentInputResponse
  nameWithType: DebugActionInput.CurrentInputResponse
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.CurrentInputResponse
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse
  commentId: T:BennyKok.RuntimeDebug.DebugInput.InputResponse
  parent: BennyKok.RuntimeDebug.DebugInput
  name: InputResponse
  nameWithType: InputResponse
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: ResolveAction()
  nameWithType: BaseDebugAction.ResolveAction()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseDebugAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseDebugAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.ResolveAction*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionInput.ResolveAction
  name: ResolveAction
  nameWithType: DebugActionInput.ResolveAction
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.ResolveAction
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: CanDisplayAction()
  nameWithType: BaseDebugAction.CanDisplayAction()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
    name: CanDisplayAction
    nameWithType: BaseDebugAction.CanDisplayAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
    name: CanDisplayAction
    nameWithType: BaseDebugAction.CanDisplayAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.CanDisplayAction*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionInput.CanDisplayAction
  name: CanDisplayAction
  nameWithType: DebugActionInput.CanDisplayAction
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.CanDisplayAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: GetDescription()
  nameWithType: BaseDebugAction.GetDescription()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
    name: GetDescription
    nameWithType: BaseDebugAction.GetDescription
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
    name: GetDescription
    nameWithType: BaseDebugAction.GetDescription
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.GetDescription*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionInput.GetDescription
  name: GetDescription
  nameWithType: DebugActionInput.GetDescription
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.GetDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction
  name: WithInputAction
  nameWithType: DebugActionInput.WithInputAction
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputAction
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput
  commentId: T:BennyKok.RuntimeDebug.Actions.DebugActionInput
  parent: BennyKok.RuntimeDebug.Actions
  name: DebugActionInput
  nameWithType: DebugActionInput
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput
- uid: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputQuery*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputQuery
  name: WithInputQuery
  nameWithType: DebugActionInput.WithInputQuery
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionInput.WithInputQuery
