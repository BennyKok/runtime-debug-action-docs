### YamlMime:ManagedReference
items:
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  commentId: T:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  id: RuntimeDebugSystem
  parent: BennyKok.RuntimeDebug.Systems
  children:
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.allActions
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.allFlags
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Awake
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Disable
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Enable
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetFlag(System.String)
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetPersistantFlagValue(System.String,System.Int32)
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Hide
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Init
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.InputLayer
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.isInputLayerReady
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsIsSystemEnabled
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsVisible
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.OnDebugMenuToggleEvent
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.PREF_KEY_THEME
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(System.String,BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto(System.Object,System.String)
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto(UnityEngine.Component,System.String)
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.ReleaseInputBlock
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RequsetInputBlock
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.runtimeDebugUI
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SendShortcutAction(System.String)
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetCustomInputLayer(BennyKok.RuntimeDebug.DebugInput.InputLayer)
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetTheme(BennyKok.RuntimeDebug.Data.Theme,System.Boolean)
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.settings
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Settings
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Show
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UIHandler
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsByGroup(System.String)
  - BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsById(System.String)
  langs:
  - csharp
  - vb
  name: RuntimeDebugSystem
  nameWithType: RuntimeDebugSystem
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  type: Class
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: RuntimeDebugSystem
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 17
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nThe singleton system class to handle the lifecycle of all runtime debug actions, loading of the settings ScriptableObject and also the communication between the system and UIHandler\n"
  example: []
  syntax:
    content: >-
      [AddComponentMenu("Runtime Debug Action/System/Runtime Debug System")]

      public class RuntimeDebugSystem : Singleton<RuntimeDebugSystem>
    content.vb: >-
      <AddComponentMenu("Runtime Debug Action/System/Runtime Debug System")>

      Public Class RuntimeDebugSystem
          Inherits Singleton(Of RuntimeDebugSystem)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}
  inheritedMembers:
  - BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}.Instance
  attributes:
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: Runtime Debug Action/System/Runtime Debug System
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Init
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Init
  id: Init
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: RuntimeDebugSystem.Init()
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Init()
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: Init
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 23
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nAuto inject the RuntimeDebugSystem into your scene as a singleton\n"
  example: []
  syntax:
    content: >-
      [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]

      public static void Init()
    content.vb: >-
      <RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)>

      Public Shared Sub Init
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Init*
  attributes:
  - type: UnityEngine.RuntimeInitializeOnLoadMethodAttribute
    ctor: UnityEngine.RuntimeInitializeOnLoadMethodAttribute.#ctor(UnityEngine.RuntimeInitializeLoadType)
    arguments:
    - type: UnityEngine.RuntimeInitializeLoadType
      value: 1
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.PREF_KEY_THEME
  commentId: F:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.PREF_KEY_THEME
  id: PREF_KEY_THEME
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: PREF_KEY_THEME
  nameWithType: RuntimeDebugSystem.PREF_KEY_THEME
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.PREF_KEY_THEME
  type: Field
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: PREF_KEY_THEME
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 46
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public const string PREF_KEY_THEME = "rda-pref-theme"
    return:
      type: System.String
    content.vb: Public Const PREF_KEY_THEME As String = "rda-pref-theme"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.settings
  commentId: F:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.settings
  id: settings
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: settings
  nameWithType: RuntimeDebugSystem.settings
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.settings
  type: Field
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: settings
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 50
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: >-
      [NonSerialized]

      public Settings settings
    return:
      type: BennyKok.RuntimeDebug.Data.Settings
    content.vb: >-
      <NonSerialized>

      Public settings As Settings
  attributes:
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.runtimeDebugUI
  commentId: F:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.runtimeDebugUI
  id: runtimeDebugUI
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: runtimeDebugUI
  nameWithType: RuntimeDebugSystem.runtimeDebugUI
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.runtimeDebugUI
  type: Field
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: runtimeDebugUI
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 53
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: >-
      [Comment("Optional, if the UI not found, will be creating from the theme prefabs in the systems")]

      public DebugUIHandler runtimeDebugUI
    return:
      type: BennyKok.RuntimeDebug.Components.UI.DebugUIHandler
    content.vb: >-
      <Comment("Optional, if the UI not found, will be creating from the theme prefabs in the systems")>

      Public runtimeDebugUI As DebugUIHandler
  attributes:
  - type: BennyKok.RuntimeDebug.Utils.CommentAttribute
    ctor: BennyKok.RuntimeDebug.Utils.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Optional, if the UI not found, will be creating from the theme prefabs in the systems
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.allActions
  commentId: F:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.allActions
  id: allActions
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: allActions
  nameWithType: RuntimeDebugSystem.allActions
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.allActions
  type: Field
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: allActions
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 55
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: >-
      [NonSerialized]

      public List<BaseDebugAction> allActions
    return:
      type: System.Collections.Generic.List{BennyKok.RuntimeDebug.Actions.BaseDebugAction}
    content.vb: >-
      <NonSerialized>

      Public allActions As List(Of BaseDebugAction)
  attributes:
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.allFlags
  commentId: F:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.allFlags
  id: allFlags
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: allFlags
  nameWithType: RuntimeDebugSystem.allFlags
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.allFlags
  type: Field
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: allFlags
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 56
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: >-
      [NonSerialized]

      public List<DebugActionFlag> allFlags
    return:
      type: System.Collections.Generic.List{BennyKok.RuntimeDebug.Actions.DebugActionFlag}
    content.vb: >-
      <NonSerialized>

      Public allFlags As List(Of DebugActionFlag)
  attributes:
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.OnDebugMenuToggleEvent
  commentId: E:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.OnDebugMenuToggleEvent
  id: OnDebugMenuToggleEvent
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: OnDebugMenuToggleEvent
  nameWithType: RuntimeDebugSystem.OnDebugMenuToggleEvent
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.OnDebugMenuToggleEvent
  type: Event
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: OnDebugMenuToggleEvent
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 60
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public event Action<bool> OnDebugMenuToggleEvent
    return:
      type: System.Action{System.Boolean}
    content.vb: Public Event OnDebugMenuToggleEvent As Action(Of Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsVisible
  commentId: P:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsVisible
  id: IsVisible
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: RuntimeDebugSystem.IsVisible
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsVisible
  type: Property
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: IsVisible
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 63
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public static bool IsVisible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsVisible As Boolean
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsVisible*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.isInputLayerReady
  commentId: F:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.isInputLayerReady
  id: isInputLayerReady
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: isInputLayerReady
  nameWithType: RuntimeDebugSystem.isInputLayerReady
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.isInputLayerReady
  type: Field
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: isInputLayerReady
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 64
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public static bool isInputLayerReady
    return:
      type: System.Boolean
    content.vb: Public Shared isInputLayerReady As Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsIsSystemEnabled
  commentId: P:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsIsSystemEnabled
  id: IsIsSystemEnabled
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: IsIsSystemEnabled
  nameWithType: RuntimeDebugSystem.IsIsSystemEnabled
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsIsSystemEnabled
  type: Property
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: IsIsSystemEnabled
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 65
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public static bool IsIsSystemEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsIsSystemEnabled As Boolean
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsIsSystemEnabled*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Settings
  commentId: P:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Settings
  id: Settings
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: RuntimeDebugSystem.Settings
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Settings
  type: Property
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: Settings
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 67
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public static Settings Settings { get; }
    parameters: []
    return:
      type: BennyKok.RuntimeDebug.Data.Settings
    content.vb: Public Shared ReadOnly Property Settings As Settings
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Settings*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UIHandler
  commentId: P:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UIHandler
  id: UIHandler
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: UIHandler
  nameWithType: RuntimeDebugSystem.UIHandler
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UIHandler
  type: Property
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: UIHandler
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 68
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public static DebugUIHandler UIHandler { get; }
    parameters: []
    return:
      type: BennyKok.RuntimeDebug.Components.UI.DebugUIHandler
    content.vb: Public Shared ReadOnly Property UIHandler As DebugUIHandler
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UIHandler*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.InputLayer
  commentId: P:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.InputLayer
  id: InputLayer
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: InputLayer
  nameWithType: RuntimeDebugSystem.InputLayer
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.InputLayer
  type: Property
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: InputLayer
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 69
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public static InputLayer InputLayer { get; }
    parameters: []
    return:
      type: BennyKok.RuntimeDebug.DebugInput.InputLayer
    content.vb: Public Shared ReadOnly Property InputLayer As InputLayer
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.InputLayer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetCustomInputLayer(BennyKok.RuntimeDebug.DebugInput.InputLayer)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetCustomInputLayer(BennyKok.RuntimeDebug.DebugInput.InputLayer)
  id: SetCustomInputLayer(BennyKok.RuntimeDebug.DebugInput.InputLayer)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: SetCustomInputLayer(InputLayer)
  nameWithType: RuntimeDebugSystem.SetCustomInputLayer(InputLayer)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetCustomInputLayer(BennyKok.RuntimeDebug.DebugInput.InputLayer)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: SetCustomInputLayer
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 78
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nSet a custom input layer which handles the core part of the keyboard input of the debug system\n"
  example: []
  syntax:
    content: public static void SetCustomInputLayer(InputLayer inputLayer)
    parameters:
    - id: inputLayer
      type: BennyKok.RuntimeDebug.DebugInput.InputLayer
      description: Your custom input layer
    content.vb: Public Shared Sub SetCustomInputLayer(inputLayer As InputLayer)
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetCustomInputLayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Awake
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Awake
  id: Awake
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: RuntimeDebugSystem.Awake()
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Awake()
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: Awake
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 83
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: protected override void Awake()
    content.vb: Protected Overrides Sub Awake
  overridden: BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}.Awake
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Awake*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetTheme(BennyKok.RuntimeDebug.Data.Theme,System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetTheme(BennyKok.RuntimeDebug.Data.Theme,System.Boolean)
  id: SetTheme(BennyKok.RuntimeDebug.Data.Theme,System.Boolean)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: SetTheme(Theme, Boolean)
  nameWithType: RuntimeDebugSystem.SetTheme(Theme, Boolean)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetTheme(BennyKok.RuntimeDebug.Data.Theme, System.Boolean)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: SetTheme
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 176
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nChange the theme of the current debug menu\n"
  example: []
  syntax:
    content: public static void SetTheme(Theme theme, bool dirty = true)
    parameters:
    - id: theme
      type: BennyKok.RuntimeDebug.Data.Theme
      description: The theme to change to
    - id: dirty
      type: System.Boolean
      description: If dirty, all the action will be re-initialized
    content.vb: Public Shared Sub SetTheme(theme As Theme, dirty As Boolean = True)
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetTheme*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Disable
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Disable
  id: Disable
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: Disable()
  nameWithType: RuntimeDebugSystem.Disable()
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Disable()
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: Disable
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 202
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nTo disable the system in runtime\n"
  example: []
  syntax:
    content: public void Disable()
    content.vb: Public Sub Disable
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Disable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Enable
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Enable
  id: Enable
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: Enable()
  nameWithType: RuntimeDebugSystem.Enable()
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Enable()
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: Enable
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 212
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nTo enable back the system in runtime\n"
  example: []
  syntax:
    content: public void Enable()
    content.vb: Public Sub Enable
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Enable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Show
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Show
  id: Show
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: Show()
  nameWithType: RuntimeDebugSystem.Show()
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Show()
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: Show
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 221
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nTo show the debug menu\n"
  example: []
  syntax:
    content: public void Show()
    content.vb: Public Sub Show
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Show*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Hide
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Hide
  id: Hide
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: Hide()
  nameWithType: RuntimeDebugSystem.Hide()
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Hide()
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: Hide
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 229
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nTo hide the debug menu\n"
  example: []
  syntax:
    content: public void Hide()
    content.vb: Public Sub Hide
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Hide*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RequsetInputBlock
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RequsetInputBlock
  id: RequsetInputBlock
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: RequsetInputBlock()
  nameWithType: RuntimeDebugSystem.RequsetInputBlock()
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RequsetInputBlock()
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: RequsetInputBlock
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 236
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public void RequsetInputBlock()
    content.vb: Public Sub RequsetInputBlock
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RequsetInputBlock*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.ReleaseInputBlock
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.ReleaseInputBlock
  id: ReleaseInputBlock
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: ReleaseInputBlock()
  nameWithType: RuntimeDebugSystem.ReleaseInputBlock()
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.ReleaseInputBlock()
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: ReleaseInputBlock
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 241
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public void ReleaseInputBlock()
    content.vb: Public Sub ReleaseInputBlock
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.ReleaseInputBlock*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SendShortcutAction(System.String)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SendShortcutAction(System.String)
  id: SendShortcutAction(System.String)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: SendShortcutAction(String)
  nameWithType: RuntimeDebugSystem.SendShortcutAction(String)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SendShortcutAction(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: SendShortcutAction
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 282
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  syntax:
    content: public void SendShortcutAction(string key)
    parameters:
    - id: key
      type: System.String
    content.vb: Public Sub SendShortcutAction(key As String)
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SendShortcutAction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetFlag(System.String)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetFlag(System.String)
  id: GetFlag(System.String)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: GetFlag(String)
  nameWithType: RuntimeDebugSystem.GetFlag(String)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetFlag(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetFlag
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 323
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nCheck if there&apos;s any flags turned on\n"
  example: []
  syntax:
    content: public static DebugActionFlag GetFlag(string key)
    parameters:
    - id: key
      type: System.String
      description: The key of the flag
    return:
      type: BennyKok.RuntimeDebug.Actions.DebugActionFlag
      description: If the flag is on
    content.vb: Public Shared Function GetFlag(key As String) As DebugActionFlag
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetFlag*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetPersistantFlagValue(System.String,System.Int32)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetPersistantFlagValue(System.String,System.Int32)
  id: GetPersistantFlagValue(System.String,System.Int32)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: GetPersistantFlagValue(String, Int32)
  nameWithType: RuntimeDebugSystem.GetPersistantFlagValue(String, Int32)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetPersistantFlagValue(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetPersistantFlagValue
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 338
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nGet any persistant flag&apos;s value\n"
  example: []
  syntax:
    content: public static int GetPersistantFlagValue(string key, int defaultValue = 0)
    parameters:
    - id: key
      type: System.String
      description: Flag key
    - id: defaultValue
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: The flag&apos;s value stored in PlayerPrefs
    content.vb: Public Shared Function GetPersistantFlagValue(key As String, defaultValue As Integer = 0) As Integer
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetPersistantFlagValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(System.String,BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(System.String,BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  id: RegisterActions(System.String,BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: RegisterActions(String, BaseDebugAction[])
  nameWithType: RuntimeDebugSystem.RegisterActions(String, BaseDebugAction[])
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(System.String, BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: RegisterActions
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 348
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nRegister any actions to the system with a specific path\n"
  example: []
  syntax:
    content: public static void RegisterActions(string group, params BaseDebugAction[] actions)
    parameters:
    - id: group
      type: System.String
      description: The group to set for each actions
    - id: actions
      type: BennyKok.RuntimeDebug.Actions.BaseDebugAction[]
      description: The actions to register
    content.vb: Public Shared Sub RegisterActions(group As String, ParamArray actions As BaseDebugAction())
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions*
  nameWithType.vb: RuntimeDebugSystem.RegisterActions(String, BaseDebugAction())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(System.String, BennyKok.RuntimeDebug.Actions.BaseDebugAction())
  name.vb: RegisterActions(String, BaseDebugAction())
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto(UnityEngine.Component,System.String)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto(UnityEngine.Component,System.String)
  id: RegisterActionsAuto(UnityEngine.Component,System.String)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: RegisterActionsAuto(Component, String)
  nameWithType: RuntimeDebugSystem.RegisterActionsAuto(Component, String)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto(UnityEngine.Component, System.String)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: RegisterActionsAuto
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 367
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nRegister actions automatically with reflection looking through method,field,prop with <xref href=\"BennyKok.RuntimeDebug.Attributes.DebugActionAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static BaseDebugAction[] RegisterActionsAuto(Component component, string group = null)
    parameters:
    - id: component
      type: UnityEngine.Component
      description: The component to look at
    - id: group
      type: System.String
      description: Optional group name, if null, will be using the GameObject&apos;s name
    return:
      type: BennyKok.RuntimeDebug.Actions.BaseDebugAction[]
      description: The array of the actions created, use this as a reference for action unregistering
    content.vb: Public Shared Function RegisterActionsAuto(component As Component, group As String = Nothing) As BaseDebugAction()
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto(System.Object,System.String)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto(System.Object,System.String)
  id: RegisterActionsAuto(System.Object,System.String)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: RegisterActionsAuto(Object, String)
  nameWithType: RuntimeDebugSystem.RegisterActionsAuto(Object, String)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto(System.Object, System.String)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: RegisterActionsAuto
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 379
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nRegister actions automatically with reflection looking through method,field,prop with <xref href=\"BennyKok.RuntimeDebug.Attributes.DebugActionAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static BaseDebugAction[] RegisterActionsAuto(object target, string group = null)
    parameters:
    - id: target
      type: System.Object
      description: The target to look at
    - id: group
      type: System.String
      description: Optional group name, if null, will be using the target type&apos;s name
    return:
      type: BennyKok.RuntimeDebug.Actions.BaseDebugAction[]
      description: The array of the actions created, use this as a reference for action unregistering
    content.vb: Public Shared Function RegisterActionsAuto(target As Object, group As String = Nothing) As BaseDebugAction()
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  id: RegisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: RegisterActions(BaseDebugAction[])
  nameWithType: RuntimeDebugSystem.RegisterActions(BaseDebugAction[])
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: RegisterActions
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 517
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nRegister any actions to the system\n"
  example: []
  syntax:
    content: public static void RegisterActions(params BaseDebugAction[] actions)
    parameters:
    - id: actions
      type: BennyKok.RuntimeDebug.Actions.BaseDebugAction[]
      description: The actions to register
    content.vb: Public Shared Sub RegisterActions(ParamArray actions As BaseDebugAction())
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions*
  nameWithType.vb: RuntimeDebugSystem.RegisterActions(BaseDebugAction())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction())
  name.vb: RegisterActions(BaseDebugAction())
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsByGroup(System.String)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsByGroup(System.String)
  id: UnregisterActionsByGroup(System.String)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: UnregisterActionsByGroup(String)
  nameWithType: RuntimeDebugSystem.UnregisterActionsByGroup(String)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsByGroup(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: UnregisterActionsByGroup
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 530
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nUnregister any actions that is in the path\n"
  example: []
  syntax:
    content: public static void UnregisterActionsByGroup(string group)
    parameters:
    - id: group
      type: System.String
      description: The path to unregister the actions
    content.vb: Public Shared Sub UnregisterActionsByGroup(group As String)
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsByGroup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsById(System.String)
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsById(System.String)
  id: UnregisterActionsById(System.String)
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: UnregisterActionsById(String)
  nameWithType: RuntimeDebugSystem.UnregisterActionsById(String)
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsById(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: UnregisterActionsById
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 547
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nUnregister any actions that has the same id\n"
  example: []
  syntax:
    content: public static void UnregisterActionsById(string id)
    parameters:
    - id: id
      type: System.String
      description: The id of the actions to unregister
    content.vb: Public Shared Sub UnregisterActionsById(id As String)
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsById*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  commentId: M:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  id: UnregisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  parent: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  langs:
  - csharp
  - vb
  name: UnregisterActions(BaseDebugAction[])
  nameWithType: RuntimeDebugSystem.UnregisterActions(BaseDebugAction[])
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction[])
  type: Method
  source:
    remote:
      path: Runtime/Systems/RuntimeDebugSystem.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: UnregisterActions
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Systems/RuntimeDebugSystem.cs
    startLine: 564
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Systems
  summary: "\nUnregister specific actions from the system and menu\n"
  example: []
  syntax:
    content: public static void UnregisterActions(params BaseDebugAction[] actions)
    parameters:
    - id: actions
      type: BennyKok.RuntimeDebug.Actions.BaseDebugAction[]
      description: The actions to remove
    content.vb: Public Shared Sub UnregisterActions(ParamArray actions As BaseDebugAction())
  overload: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions*
  nameWithType.vb: RuntimeDebugSystem.UnregisterActions(BaseDebugAction())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions(BennyKok.RuntimeDebug.Actions.BaseDebugAction())
  name.vb: UnregisterActions(BaseDebugAction())
references:
- uid: BennyKok.RuntimeDebug.Systems
  commentId: N:BennyKok.RuntimeDebug.Systems
  name: BennyKok.RuntimeDebug.Systems
  nameWithType: BennyKok.RuntimeDebug.Systems
  fullName: BennyKok.RuntimeDebug.Systems
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}
  commentId: T:BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}
  parent: BennyKok.RuntimeDebug.Utils
  definition: BennyKok.RuntimeDebug.Utils.Singleton`1
  name: Singleton<RuntimeDebugSystem>
  nameWithType: Singleton<RuntimeDebugSystem>
  fullName: BennyKok.RuntimeDebug.Utils.Singleton<BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem>
  nameWithType.vb: Singleton(Of RuntimeDebugSystem)
  fullName.vb: BennyKok.RuntimeDebug.Utils.Singleton(Of BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem)
  name.vb: Singleton(Of RuntimeDebugSystem)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Utils.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: BennyKok.RuntimeDebug.Utils.Singleton
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
    name: RuntimeDebugSystem
    nameWithType: RuntimeDebugSystem
    fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Utils.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: BennyKok.RuntimeDebug.Utils.Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
    name: RuntimeDebugSystem
    nameWithType: RuntimeDebugSystem
    fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}.Instance
  commentId: P:BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}.Instance
  parent: BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}
  definition: BennyKok.RuntimeDebug.Utils.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<RuntimeDebugSystem>.Instance
  fullName: BennyKok.RuntimeDebug.Utils.Singleton<BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem>.Instance
  nameWithType.vb: Singleton(Of RuntimeDebugSystem).Instance
  fullName.vb: BennyKok.RuntimeDebug.Utils.Singleton(Of BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem).Instance
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: BennyKok.RuntimeDebug.Utils.Singleton`1
  commentId: T:BennyKok.RuntimeDebug.Utils.Singleton`1
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: BennyKok.RuntimeDebug.Utils.Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: BennyKok.RuntimeDebug.Utils.Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Utils.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: BennyKok.RuntimeDebug.Utils.Singleton
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Utils.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: BennyKok.RuntimeDebug.Utils.Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Utils
  commentId: N:BennyKok.RuntimeDebug.Utils
  name: BennyKok.RuntimeDebug.Utils
  nameWithType: BennyKok.RuntimeDebug.Utils
  fullName: BennyKok.RuntimeDebug.Utils
- uid: BennyKok.RuntimeDebug.Utils.Singleton`1.Instance
  commentId: P:BennyKok.RuntimeDebug.Utils.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: BennyKok.RuntimeDebug.Utils.Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: BennyKok.RuntimeDebug.Utils.Singleton(Of T).Instance
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Init*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Init
  name: Init
  nameWithType: RuntimeDebugSystem.Init
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Init
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BennyKok.RuntimeDebug.Data.Settings
  commentId: T:BennyKok.RuntimeDebug.Data.Settings
  parent: BennyKok.RuntimeDebug.Data
  name: Settings
  nameWithType: Settings
  fullName: BennyKok.RuntimeDebug.Data.Settings
- uid: BennyKok.RuntimeDebug.Data
  commentId: N:BennyKok.RuntimeDebug.Data
  name: BennyKok.RuntimeDebug.Data
  nameWithType: BennyKok.RuntimeDebug.Data
  fullName: BennyKok.RuntimeDebug.Data
- uid: BennyKok.RuntimeDebug.Components.UI.DebugUIHandler
  commentId: T:BennyKok.RuntimeDebug.Components.UI.DebugUIHandler
  parent: BennyKok.RuntimeDebug.Components.UI
  name: DebugUIHandler
  nameWithType: DebugUIHandler
  fullName: BennyKok.RuntimeDebug.Components.UI.DebugUIHandler
- uid: BennyKok.RuntimeDebug.Components.UI
  commentId: N:BennyKok.RuntimeDebug.Components.UI
  name: BennyKok.RuntimeDebug.Components.UI
  nameWithType: BennyKok.RuntimeDebug.Components.UI
  fullName: BennyKok.RuntimeDebug.Components.UI
- uid: System.Collections.Generic.List{BennyKok.RuntimeDebug.Actions.BaseDebugAction}
  commentId: T:System.Collections.Generic.List{BennyKok.RuntimeDebug.Actions.BaseDebugAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BaseDebugAction>
  nameWithType: List<BaseDebugAction>
  fullName: System.Collections.Generic.List<BennyKok.RuntimeDebug.Actions.BaseDebugAction>
  nameWithType.vb: List(Of BaseDebugAction)
  fullName.vb: System.Collections.Generic.List(Of BennyKok.RuntimeDebug.Actions.BaseDebugAction)
  name.vb: List(Of BaseDebugAction)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction
    name: BaseDebugAction
    nameWithType: BaseDebugAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction
    name: BaseDebugAction
    nameWithType: BaseDebugAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{BennyKok.RuntimeDebug.Actions.DebugActionFlag}
  commentId: T:System.Collections.Generic.List{BennyKok.RuntimeDebug.Actions.DebugActionFlag}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DebugActionFlag>
  nameWithType: List<DebugActionFlag>
  fullName: System.Collections.Generic.List<BennyKok.RuntimeDebug.Actions.DebugActionFlag>
  nameWithType.vb: List(Of DebugActionFlag)
  fullName.vb: System.Collections.Generic.List(Of BennyKok.RuntimeDebug.Actions.DebugActionFlag)
  name.vb: List(Of DebugActionFlag)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.Actions.DebugActionFlag
    name: DebugActionFlag
    nameWithType: DebugActionFlag
    fullName: BennyKok.RuntimeDebug.Actions.DebugActionFlag
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.Actions.DebugActionFlag
    name: DebugActionFlag
    nameWithType: DebugActionFlag
    fullName: BennyKok.RuntimeDebug.Actions.DebugActionFlag
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Boolean}
  commentId: T:System.Action{System.Boolean}
  parent: System
  definition: System.Action`1
  name: Action<Boolean>
  nameWithType: Action<Boolean>
  fullName: System.Action<System.Boolean>
  nameWithType.vb: Action(Of Boolean)
  fullName.vb: System.Action(Of System.Boolean)
  name.vb: Action(Of Boolean)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsVisible*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsVisible
  name: IsVisible
  nameWithType: RuntimeDebugSystem.IsVisible
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsVisible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsIsSystemEnabled*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsIsSystemEnabled
  name: IsIsSystemEnabled
  nameWithType: RuntimeDebugSystem.IsIsSystemEnabled
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.IsIsSystemEnabled
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Settings*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Settings
  name: Settings
  nameWithType: RuntimeDebugSystem.Settings
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Settings
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UIHandler*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UIHandler
  name: UIHandler
  nameWithType: RuntimeDebugSystem.UIHandler
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UIHandler
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.InputLayer*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.InputLayer
  name: InputLayer
  nameWithType: RuntimeDebugSystem.InputLayer
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.InputLayer
- uid: BennyKok.RuntimeDebug.DebugInput.InputLayer
  commentId: T:BennyKok.RuntimeDebug.DebugInput.InputLayer
  parent: BennyKok.RuntimeDebug.DebugInput
  name: InputLayer
  nameWithType: InputLayer
  fullName: BennyKok.RuntimeDebug.DebugInput.InputLayer
- uid: BennyKok.RuntimeDebug.DebugInput
  commentId: N:BennyKok.RuntimeDebug.DebugInput
  name: BennyKok.RuntimeDebug.DebugInput
  nameWithType: BennyKok.RuntimeDebug.DebugInput
  fullName: BennyKok.RuntimeDebug.DebugInput
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetCustomInputLayer*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetCustomInputLayer
  name: SetCustomInputLayer
  nameWithType: RuntimeDebugSystem.SetCustomInputLayer
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetCustomInputLayer
- uid: BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}.Awake
  commentId: M:BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}.Awake
  parent: BennyKok.RuntimeDebug.Utils.Singleton{BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem}
  definition: BennyKok.RuntimeDebug.Utils.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<RuntimeDebugSystem>.Awake()
  fullName: BennyKok.RuntimeDebug.Utils.Singleton<BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem>.Awake()
  nameWithType.vb: Singleton(Of RuntimeDebugSystem).Awake()
  fullName.vb: BennyKok.RuntimeDebug.Utils.Singleton(Of BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem).Awake()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Utils.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<RuntimeDebugSystem>.Awake
    fullName: BennyKok.RuntimeDebug.Utils.Singleton<BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Utils.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of RuntimeDebugSystem).Awake
    fullName: BennyKok.RuntimeDebug.Utils.Singleton(Of BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Awake*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Awake
  name: Awake
  nameWithType: RuntimeDebugSystem.Awake
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Awake
- uid: BennyKok.RuntimeDebug.Utils.Singleton`1.Awake
  commentId: M:BennyKok.RuntimeDebug.Utils.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: BennyKok.RuntimeDebug.Utils.Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: BennyKok.RuntimeDebug.Utils.Singleton(Of T).Awake()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Utils.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<T>.Awake
    fullName: BennyKok.RuntimeDebug.Utils.Singleton<T>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Utils.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of T).Awake
    fullName: BennyKok.RuntimeDebug.Utils.Singleton(Of T).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetTheme*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetTheme
  name: SetTheme
  nameWithType: RuntimeDebugSystem.SetTheme
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SetTheme
- uid: BennyKok.RuntimeDebug.Data.Theme
  commentId: T:BennyKok.RuntimeDebug.Data.Theme
  parent: BennyKok.RuntimeDebug.Data
  name: Theme
  nameWithType: Theme
  fullName: BennyKok.RuntimeDebug.Data.Theme
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Disable*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Disable
  name: Disable
  nameWithType: RuntimeDebugSystem.Disable
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Disable
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Enable*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Enable
  name: Enable
  nameWithType: RuntimeDebugSystem.Enable
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Enable
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Show*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Show
  name: Show
  nameWithType: RuntimeDebugSystem.Show
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Show
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Hide*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Hide
  name: Hide
  nameWithType: RuntimeDebugSystem.Hide
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.Hide
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RequsetInputBlock*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RequsetInputBlock
  name: RequsetInputBlock
  nameWithType: RuntimeDebugSystem.RequsetInputBlock
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RequsetInputBlock
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.ReleaseInputBlock*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.ReleaseInputBlock
  name: ReleaseInputBlock
  nameWithType: RuntimeDebugSystem.ReleaseInputBlock
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.ReleaseInputBlock
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SendShortcutAction*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SendShortcutAction
  name: SendShortcutAction
  nameWithType: RuntimeDebugSystem.SendShortcutAction
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.SendShortcutAction
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetFlag*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetFlag
  name: GetFlag
  nameWithType: RuntimeDebugSystem.GetFlag
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetFlag
- uid: BennyKok.RuntimeDebug.Actions.DebugActionFlag
  commentId: T:BennyKok.RuntimeDebug.Actions.DebugActionFlag
  parent: BennyKok.RuntimeDebug.Actions
  name: DebugActionFlag
  nameWithType: DebugActionFlag
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionFlag
- uid: BennyKok.RuntimeDebug.Actions
  commentId: N:BennyKok.RuntimeDebug.Actions
  name: BennyKok.RuntimeDebug.Actions
  nameWithType: BennyKok.RuntimeDebug.Actions
  fullName: BennyKok.RuntimeDebug.Actions
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetPersistantFlagValue*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetPersistantFlagValue
  name: GetPersistantFlagValue
  nameWithType: RuntimeDebugSystem.GetPersistantFlagValue
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.GetPersistantFlagValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions
  name: RegisterActions
  nameWithType: RuntimeDebugSystem.RegisterActions
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActions
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction[]
  isExternal: true
  name: BaseDebugAction[]
  nameWithType: BaseDebugAction[]
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction[]
  nameWithType.vb: BaseDebugAction()
  fullName.vb: BennyKok.RuntimeDebug.Actions.BaseDebugAction()
  name.vb: BaseDebugAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction
    name: BaseDebugAction
    nameWithType: BaseDebugAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction
    name: BaseDebugAction
    nameWithType: BaseDebugAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BennyKok.RuntimeDebug.Attributes.DebugActionAttribute
  commentId: T:BennyKok.RuntimeDebug.Attributes.DebugActionAttribute
  parent: BennyKok.RuntimeDebug.Attributes
  name: DebugActionAttribute
  nameWithType: DebugActionAttribute
  fullName: BennyKok.RuntimeDebug.Attributes.DebugActionAttribute
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto
  name: RegisterActionsAuto
  nameWithType: RuntimeDebugSystem.RegisterActionsAuto
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.RegisterActionsAuto
- uid: BennyKok.RuntimeDebug.Attributes
  commentId: N:BennyKok.RuntimeDebug.Attributes
  name: BennyKok.RuntimeDebug.Attributes
  nameWithType: BennyKok.RuntimeDebug.Attributes
  fullName: BennyKok.RuntimeDebug.Attributes
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsByGroup*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsByGroup
  name: UnregisterActionsByGroup
  nameWithType: RuntimeDebugSystem.UnregisterActionsByGroup
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsByGroup
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsById*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsById
  name: UnregisterActionsById
  nameWithType: RuntimeDebugSystem.UnregisterActionsById
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActionsById
- uid: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions*
  commentId: Overload:BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions
  name: UnregisterActions
  nameWithType: RuntimeDebugSystem.UnregisterActions
  fullName: BennyKok.RuntimeDebug.Systems.RuntimeDebugSystem.UnregisterActions
