### YamlMime:ManagedReference
items:
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  commentId: T:BennyKok.RuntimeDebug.Actions.DebugActionEnum
  id: DebugActionEnum
  parent: BennyKok.RuntimeDebug.Actions
  children:
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionChange
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionGet
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionSet
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum.GetDisplayStatus(System.Int32)
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum.ResolveAction
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet(System.Func{System.Int32})
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet(System.Action{System.Int32})
  - BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithEnumType(System.Type)
  langs:
  - csharp
  - vb
  name: DebugActionEnum
  nameWithType: DebugActionEnum
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  type: Class
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: DebugActionEnum
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 21
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  summary: "\nEnum action will be represented as a button selector in the debug menu, triggering the action will cycle the value\n"
  example:
  - "\n<pre><code>RuntimeDebugSystem.RegisterActions(\n    DebugActionBuilder.Enum()\n        .WithName(&quot;Set My Enum&quot;)\n        .WithEnumType(typeof(MyEnum))\n        .WithActionGet(() => myEnum)\n        .WithActionSet((value) => myEnum = value)\n);</code></pre>\n"
  syntax:
    content: >-
      [Serializable]

      public class DebugActionEnum : FluentAction<DebugActionEnum>
    content.vb: >-
      <Serializable>

      Public Class DebugActionEnum
          Inherits FluentAction(Of DebugActionEnum)
  inheritance:
  - System.Object
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  inheritedMembers:
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithId(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithAction(System.Action)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithName(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithDescription(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithGroup(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithShortcutKey(System.String)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithActionColor(UnityEngine.Color)
  - BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithClosePanelAfterTrigger(System.Boolean)
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  - BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionChange
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionChange
  id: actionChange
  parent: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  langs:
  - csharp
  - vb
  name: actionChange
  nameWithType: DebugActionEnum.actionChange
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionChange
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: actionChange
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 24
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public Action<int> actionChange
    return:
      type: System.Action{System.Int32}
    content.vb: Public actionChange As Action(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionSet
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionSet
  id: actionSet
  parent: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  langs:
  - csharp
  - vb
  name: actionSet
  nameWithType: DebugActionEnum.actionSet
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionSet
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: actionSet
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 26
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public Action<int> actionSet
    return:
      type: System.Action{System.Int32}
    content.vb: Public actionSet As Action(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionGet
  commentId: F:BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionGet
  id: actionGet
  parent: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  langs:
  - csharp
  - vb
  name: actionGet
  nameWithType: DebugActionEnum.actionGet
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.actionGet
  type: Field
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: actionGet
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 27
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public Func<int> actionGet
    return:
      type: System.Func{System.Int32}
    content.vb: Public actionGet As Func(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.GetDisplayStatus(System.Int32)
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionEnum.GetDisplayStatus(System.Int32)
  id: GetDisplayStatus(System.Int32)
  parent: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  langs:
  - csharp
  - vb
  name: GetDisplayStatus(Int32)
  nameWithType: DebugActionEnum.GetDisplayStatus(Int32)
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.GetDisplayStatus(System.Int32)
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetDisplayStatus
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 31
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: protected string GetDisplayStatus(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.String
    content.vb: Protected Function GetDisplayStatus(value As Integer) As String
  overload: BennyKok.RuntimeDebug.Actions.DebugActionEnum.GetDisplayStatus*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithEnumType(System.Type)
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithEnumType(System.Type)
  id: WithEnumType(System.Type)
  parent: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  langs:
  - csharp
  - vb
  name: WithEnumType(Type)
  nameWithType: DebugActionEnum.WithEnumType(Type)
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithEnumType(System.Type)
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithEnumType
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 33
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual DebugActionEnum WithEnumType(Type enumType)
    parameters:
    - id: enumType
      type: System.Type
    return:
      type: BennyKok.RuntimeDebug.Actions.DebugActionEnum
    content.vb: Public Overridable Function WithEnumType(enumType As Type) As DebugActionEnum
  overload: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithEnumType*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet(System.Func{System.Int32})
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet(System.Func{System.Int32})
  id: WithActionGet(System.Func{System.Int32})
  parent: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  langs:
  - csharp
  - vb
  name: WithActionGet(Func<Int32>)
  nameWithType: DebugActionEnum.WithActionGet(Func<Int32>)
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet(System.Func<System.Int32>)
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithActionGet
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 39
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual DebugActionEnum WithActionGet(Func<int> actionGet)
    parameters:
    - id: actionGet
      type: System.Func{System.Int32}
    return:
      type: BennyKok.RuntimeDebug.Actions.DebugActionEnum
    content.vb: Public Overridable Function WithActionGet(actionGet As Func(Of Integer)) As DebugActionEnum
  overload: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet*
  nameWithType.vb: DebugActionEnum.WithActionGet(Func(Of Int32))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet(System.Func(Of System.Int32))
  name.vb: WithActionGet(Func(Of Int32))
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet(System.Action{System.Int32})
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet(System.Action{System.Int32})
  id: WithActionSet(System.Action{System.Int32})
  parent: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  langs:
  - csharp
  - vb
  name: WithActionSet(Action<Int32>)
  nameWithType: DebugActionEnum.WithActionSet(Action<Int32>)
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet(System.Action<System.Int32>)
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: WithActionSet
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 46
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public virtual DebugActionEnum WithActionSet(Action<int> actionSet)
    parameters:
    - id: actionSet
      type: System.Action{System.Int32}
    return:
      type: BennyKok.RuntimeDebug.Actions.DebugActionEnum
    content.vb: Public Overridable Function WithActionSet(actionSet As Action(Of Integer)) As DebugActionEnum
  overload: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet*
  nameWithType.vb: DebugActionEnum.WithActionSet(Action(Of Int32))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet(System.Action(Of System.Int32))
  name.vb: WithActionSet(Action(Of Int32))
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.ResolveAction
  commentId: M:BennyKok.RuntimeDebug.Actions.DebugActionEnum.ResolveAction
  id: ResolveAction
  parent: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  langs:
  - csharp
  - vb
  name: ResolveAction()
  nameWithType: DebugActionEnum.ResolveAction()
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.ResolveAction()
  type: Method
  source:
    remote:
      path: Runtime/Actions/DebugActionEnum.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: ResolveAction
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Actions/DebugActionEnum.cs
    startLine: 52
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.Actions
  syntax:
    content: public override void ResolveAction()
    content.vb: Public Overrides Sub ResolveAction
  overridden: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  overload: BennyKok.RuntimeDebug.Actions.DebugActionEnum.ResolveAction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BennyKok.RuntimeDebug.Actions
  commentId: N:BennyKok.RuntimeDebug.Actions
  name: BennyKok.RuntimeDebug.Actions
  nameWithType: BennyKok.RuntimeDebug.Actions
  fullName: BennyKok.RuntimeDebug.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  commentId: T:BennyKok.RuntimeDebug.Actions.BaseDebugAction
  parent: BennyKok.RuntimeDebug.Actions
  name: BaseDebugAction
  nameWithType: BaseDebugAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  commentId: T:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  parent: BennyKok.RuntimeDebug.Actions
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1
  name: FluentAction<DebugActionEnum>
  nameWithType: FluentAction<DebugActionEnum>
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>
  nameWithType.vb: FluentAction(Of DebugActionEnum)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum)
  name.vb: FluentAction(Of DebugActionEnum)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum
    name: DebugActionEnum
    nameWithType: DebugActionEnum
    fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum
    name: DebugActionEnum
    nameWithType: DebugActionEnum
    fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithId(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithId(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  name: WithId(String)
  nameWithType: FluentAction<DebugActionEnum>.WithId(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithId(System.String)
  nameWithType.vb: FluentAction(Of DebugActionEnum).WithId(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithId(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction<DebugActionEnum>.WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction(Of DebugActionEnum).WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithAction(System.Action)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithAction(System.Action)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  name: WithAction(Action)
  nameWithType: FluentAction<DebugActionEnum>.WithAction(Action)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithAction(System.Action)
  nameWithType.vb: FluentAction(Of DebugActionEnum).WithAction(Action)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithAction(System.Action)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction<DebugActionEnum>.WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction(Of DebugActionEnum).WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithName(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithName(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  name: WithName(String)
  nameWithType: FluentAction<DebugActionEnum>.WithName(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithName(System.String)
  nameWithType.vb: FluentAction(Of DebugActionEnum).WithName(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithName(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction<DebugActionEnum>.WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction(Of DebugActionEnum).WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithDescription(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithDescription(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  name: WithDescription(String)
  nameWithType: FluentAction<DebugActionEnum>.WithDescription(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithDescription(System.String)
  nameWithType.vb: FluentAction(Of DebugActionEnum).WithDescription(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithDescription(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction<DebugActionEnum>.WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction(Of DebugActionEnum).WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithGroup(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithGroup(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  name: WithGroup(String)
  nameWithType: FluentAction<DebugActionEnum>.WithGroup(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithGroup(System.String)
  nameWithType.vb: FluentAction(Of DebugActionEnum).WithGroup(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithGroup(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
    name: WithGroup
    nameWithType: FluentAction<DebugActionEnum>.WithGroup
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
    name: WithGroup
    nameWithType: FluentAction(Of DebugActionEnum).WithGroup
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithShortcutKey(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithShortcutKey(System.String)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  name: WithShortcutKey(String)
  nameWithType: FluentAction<DebugActionEnum>.WithShortcutKey(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithShortcutKey(System.String)
  nameWithType.vb: FluentAction(Of DebugActionEnum).WithShortcutKey(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithShortcutKey(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction<DebugActionEnum>.WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction(Of DebugActionEnum).WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithActionColor(UnityEngine.Color)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithActionColor(UnityEngine.Color)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  name: WithActionColor(Color)
  nameWithType: FluentAction<DebugActionEnum>.WithActionColor(Color)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithActionColor(UnityEngine.Color)
  nameWithType.vb: FluentAction(Of DebugActionEnum).WithActionColor(Color)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithActionColor(UnityEngine.Color)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction<DebugActionEnum>.WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction(Of DebugActionEnum).WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithClosePanelAfterTrigger(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}.WithClosePanelAfterTrigger(System.Boolean)
  parent: BennyKok.RuntimeDebug.Actions.FluentAction{BennyKok.RuntimeDebug.Actions.DebugActionEnum}
  definition: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  name: WithClosePanelAfterTrigger(Boolean)
  nameWithType: FluentAction<DebugActionEnum>.WithClosePanelAfterTrigger(Boolean)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithClosePanelAfterTrigger(System.Boolean)
  nameWithType.vb: FluentAction(Of DebugActionEnum).WithClosePanelAfterTrigger(Boolean)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithClosePanelAfterTrigger(System.Boolean)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction<DebugActionEnum>.WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<BennyKok.RuntimeDebug.Actions.DebugActionEnum>.WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction(Of DebugActionEnum).WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of BennyKok.RuntimeDebug.Actions.DebugActionEnum).WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: group
  nameWithType: BaseDebugAction.group
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.group
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: name
  nameWithType: BaseDebugAction.name
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.name
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: id
  nameWithType: BaseDebugAction.id
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.id
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: description
  nameWithType: BaseDebugAction.description
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.description
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: shortcutKey
  nameWithType: BaseDebugAction.shortcutKey
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.shortcutKey
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: closePanelAfterTrigger
  nameWithType: BaseDebugAction.closePanelAfterTrigger
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.closePanelAfterTrigger
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: actionColor
  nameWithType: BaseDebugAction.actionColor
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionColor
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: unityAction
  nameWithType: BaseDebugAction.unityAction
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.unityAction
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: action
  nameWithType: BaseDebugAction.action
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.action
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  commentId: F:BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: actionStatus
  nameWithType: BaseDebugAction.actionStatus
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.actionStatus
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: CanDisplayAction()
  nameWithType: BaseDebugAction.CanDisplayAction()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
    name: CanDisplayAction
    nameWithType: BaseDebugAction.CanDisplayAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
    name: CanDisplayAction
    nameWithType: BaseDebugAction.CanDisplayAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.CanDisplayAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: GetDescription()
  nameWithType: BaseDebugAction.GetDescription()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
    name: GetDescription
    nameWithType: BaseDebugAction.GetDescription
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
    name: GetDescription
    nameWithType: BaseDebugAction.GetDescription
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: Setup()
  nameWithType: BaseDebugAction.Setup()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
    name: Setup
    nameWithType: BaseDebugAction.Setup
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
    name: Setup
    nameWithType: BaseDebugAction.Setup
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.Setup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
  commentId: T:BennyKok.RuntimeDebug.Actions.FluentAction`1
  name: FluentAction<T>
  nameWithType: FluentAction<T>
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>
  nameWithType.vb: FluentAction(Of T)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T)
  name.vb: FluentAction(Of T)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1
    name: FluentAction
    nameWithType: FluentAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
  isExternal: true
  name: WithId(String)
  nameWithType: FluentAction<T>.WithId(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId(System.String)
  nameWithType.vb: FluentAction(Of T).WithId(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction<T>.WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithId(System.String)
    name: WithId
    nameWithType: FluentAction(Of T).WithId
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
  isExternal: true
  name: WithAction(Action)
  nameWithType: FluentAction<T>.WithAction(Action)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction(System.Action)
  nameWithType.vb: FluentAction(Of T).WithAction(Action)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction(System.Action)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction<T>.WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithAction(System.Action)
    name: WithAction
    nameWithType: FluentAction(Of T).WithAction
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
  isExternal: true
  name: WithName(String)
  nameWithType: FluentAction<T>.WithName(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithName(System.String)
  nameWithType.vb: FluentAction(Of T).WithName(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithName(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction<T>.WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithName(System.String)
    name: WithName
    nameWithType: FluentAction(Of T).WithName
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
  isExternal: true
  name: WithDescription(String)
  nameWithType: FluentAction<T>.WithDescription(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription(System.String)
  nameWithType.vb: FluentAction(Of T).WithDescription(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction<T>.WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithDescription(System.String)
    name: WithDescription
    nameWithType: FluentAction(Of T).WithDescription
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
  isExternal: true
  name: WithGroup(String)
  nameWithType: FluentAction<T>.WithGroup(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithGroup(System.String)
  nameWithType.vb: FluentAction(Of T).WithGroup(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithGroup(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
    name: WithGroup
    nameWithType: FluentAction<T>.WithGroup
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithGroup(System.String)
    name: WithGroup
    nameWithType: FluentAction(Of T).WithGroup
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
  isExternal: true
  name: WithShortcutKey(String)
  nameWithType: FluentAction<T>.WithShortcutKey(String)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey(System.String)
  nameWithType.vb: FluentAction(Of T).WithShortcutKey(String)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey(System.String)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction<T>.WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithShortcutKey(System.String)
    name: WithShortcutKey
    nameWithType: FluentAction(Of T).WithShortcutKey
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithShortcutKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
  isExternal: true
  name: WithActionColor(Color)
  nameWithType: FluentAction<T>.WithActionColor(Color)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor(UnityEngine.Color)
  nameWithType.vb: FluentAction(Of T).WithActionColor(Color)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor(UnityEngine.Color)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction<T>.WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithActionColor(UnityEngine.Color)
    name: WithActionColor
    nameWithType: FluentAction(Of T).WithActionColor
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithActionColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
  isExternal: true
  name: WithClosePanelAfterTrigger(Boolean)
  nameWithType: FluentAction<T>.WithClosePanelAfterTrigger(Boolean)
  fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger(System.Boolean)
  nameWithType.vb: FluentAction(Of T).WithClosePanelAfterTrigger(Boolean)
  fullName.vb: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger(System.Boolean)
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction<T>.WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction<T>.WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.FluentAction`1.WithClosePanelAfterTrigger(System.Boolean)
    name: WithClosePanelAfterTrigger
    nameWithType: FluentAction(Of T).WithClosePanelAfterTrigger
    fullName: BennyKok.RuntimeDebug.Actions.FluentAction(Of T).WithClosePanelAfterTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Int32}
  commentId: T:System.Action{System.Int32}
  parent: System
  definition: System.Action`1
  name: Action<Int32>
  nameWithType: Action<Int32>
  fullName: System.Action<System.Int32>
  nameWithType.vb: Action(Of Int32)
  fullName.vb: System.Action(Of System.Int32)
  name.vb: Action(Of Int32)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Int32}
  commentId: T:System.Func{System.Int32}
  parent: System
  definition: System.Func`1
  name: Func<Int32>
  nameWithType: Func<Int32>
  fullName: System.Func<System.Int32>
  nameWithType.vb: Func(Of Int32)
  fullName.vb: System.Func(Of System.Int32)
  name.vb: Func(Of Int32)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.GetDisplayStatus*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionEnum.GetDisplayStatus
  name: GetDisplayStatus
  nameWithType: DebugActionEnum.GetDisplayStatus
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.GetDisplayStatus
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithEnumType*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithEnumType
  name: WithEnumType
  nameWithType: DebugActionEnum.WithEnumType
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithEnumType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum
  commentId: T:BennyKok.RuntimeDebug.Actions.DebugActionEnum
  parent: BennyKok.RuntimeDebug.Actions
  name: DebugActionEnum
  nameWithType: DebugActionEnum
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet
  name: WithActionGet
  nameWithType: DebugActionEnum.WithActionGet
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionGet
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet
  name: WithActionSet
  nameWithType: DebugActionEnum.WithActionSet
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.WithActionSet
- uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  commentId: M:BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  parent: BennyKok.RuntimeDebug.Actions.BaseDebugAction
  name: ResolveAction()
  nameWithType: BaseDebugAction.ResolveAction()
  fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction()
  spec.csharp:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseDebugAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
    name: ResolveAction
    nameWithType: BaseDebugAction.ResolveAction
    fullName: BennyKok.RuntimeDebug.Actions.BaseDebugAction.ResolveAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.Actions.DebugActionEnum.ResolveAction*
  commentId: Overload:BennyKok.RuntimeDebug.Actions.DebugActionEnum.ResolveAction
  name: ResolveAction
  nameWithType: DebugActionEnum.ResolveAction
  fullName: BennyKok.RuntimeDebug.Actions.DebugActionEnum.ResolveAction
