### YamlMime:ManagedReference
items:
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse
  commentId: T:BennyKok.RuntimeDebug.DebugInput.InputResponse
  id: InputResponse
  parent: BennyKok.RuntimeDebug.DebugInput
  children:
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.#ctor(System.Collections.Generic.Dictionary{BennyKok.RuntimeDebug.DebugInput.Param,System.String},BennyKok.RuntimeDebug.DebugInput.InputQuery)
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.AllInputValid
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetObjectsForReflection(System.Boolean)
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParam(System.String)
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.String)
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.String)
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.String)
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.String)
  - BennyKok.RuntimeDebug.DebugInput.InputResponse.responses
  langs:
  - csharp
  - vb
  name: InputResponse
  nameWithType: InputResponse
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse
  type: Class
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: InputResponse
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 9
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  summary: "\nData class to warp around the response returned by the Input debug action\n"
  example: []
  syntax:
    content: public class InputResponse
    content.vb: Public Class InputResponse
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.responses
  commentId: F:BennyKok.RuntimeDebug.DebugInput.InputResponse.responses
  id: responses
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: responses
  nameWithType: InputResponse.responses
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.responses
  type: Field
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: responses
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 11
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public Dictionary<Param, string> responses
    return:
      type: System.Collections.Generic.Dictionary{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
    content.vb: Public responses As Dictionary(Of Param, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.AllInputValid
  commentId: P:BennyKok.RuntimeDebug.DebugInput.InputResponse.AllInputValid
  id: AllInputValid
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: AllInputValid
  nameWithType: InputResponse.AllInputValid
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.AllInputValid
  type: Property
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: AllInputValid
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 15
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public bool AllInputValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllInputValid As Boolean
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.AllInputValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.#ctor(System.Collections.Generic.Dictionary{BennyKok.RuntimeDebug.DebugInput.Param,System.String},BennyKok.RuntimeDebug.DebugInput.InputQuery)
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.#ctor(System.Collections.Generic.Dictionary{BennyKok.RuntimeDebug.DebugInput.Param,System.String},BennyKok.RuntimeDebug.DebugInput.InputQuery)
  id: '#ctor(System.Collections.Generic.Dictionary{BennyKok.RuntimeDebug.DebugInput.Param,System.String},BennyKok.RuntimeDebug.DebugInput.InputQuery)'
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: InputResponse(Dictionary<Param, String>, InputQuery)
  nameWithType: InputResponse.InputResponse(Dictionary<Param, String>, InputQuery)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.InputResponse(System.Collections.Generic.Dictionary<BennyKok.RuntimeDebug.DebugInput.Param, System.String>, BennyKok.RuntimeDebug.DebugInput.InputQuery)
  type: Constructor
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: .ctor
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 19
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public InputResponse(Dictionary<Param, string> responses, InputQuery query)
    parameters:
    - id: responses
      type: System.Collections.Generic.Dictionary{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
    - id: query
      type: BennyKok.RuntimeDebug.DebugInput.InputQuery
    content.vb: Public Sub New(responses As Dictionary(Of Param, String), query As InputQuery)
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.#ctor*
  nameWithType.vb: InputResponse.InputResponse(Dictionary(Of Param, String), InputQuery)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BennyKok.RuntimeDebug.DebugInput.InputResponse.InputResponse(System.Collections.Generic.Dictionary(Of BennyKok.RuntimeDebug.DebugInput.Param, System.String), BennyKok.RuntimeDebug.DebugInput.InputQuery)
  name.vb: InputResponse(Dictionary(Of Param, String), InputQuery)
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetObjectsForReflection(System.Boolean)
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetObjectsForReflection(System.Boolean)
  id: GetObjectsForReflection(System.Boolean)
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetObjectsForReflection(Boolean)
  nameWithType: InputResponse.GetObjectsForReflection(Boolean)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetObjectsForReflection(System.Boolean)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetObjectsForReflection
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 37
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public object[] GetObjectsForReflection(bool fillMissing = true)
    parameters:
    - id: fillMissing
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Function GetObjectsForReflection(fillMissing As Boolean = True) As Object()
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetObjectsForReflection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParam(System.String)
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParam(System.String)
  id: GetParam(System.String)
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParam(String)
  nameWithType: InputResponse.GetParam(String)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParam(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParam
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 80
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public KeyValuePair<Param, string> GetParam(string paramName)
    parameters:
    - id: paramName
      type: System.String
    return:
      type: System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
    content.vb: Public Function GetParam(paramName As String) As KeyValuePair(Of Param, String)
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParam*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.String)
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.String)
  id: GetParamString(System.String)
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParamString(String)
  nameWithType: InputResponse.GetParamString(String)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParamString
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 93
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public string GetParamString(string paramName)
    parameters:
    - id: paramName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetParamString(paramName As String) As String
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  id: GetParamString(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParamString(KeyValuePair<Param, String>)
  nameWithType: InputResponse.GetParamString(KeyValuePair<Param, String>)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.Collections.Generic.KeyValuePair<BennyKok.RuntimeDebug.DebugInput.Param, System.String>)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParamString
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 95
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public string GetParamString(KeyValuePair<Param, string> entry)
    parameters:
    - id: entry
      type: System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
    return:
      type: System.String
    content.vb: Public Function GetParamString(entry As KeyValuePair(Of Param, String)) As String
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString*
  nameWithType.vb: InputResponse.GetParamString(KeyValuePair(Of Param, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString(System.Collections.Generic.KeyValuePair(Of BennyKok.RuntimeDebug.DebugInput.Param, System.String))
  name.vb: GetParamString(KeyValuePair(Of Param, String))
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.String)
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.String)
  id: GetParamBool(System.String)
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParamBool(String)
  nameWithType: InputResponse.GetParamBool(String)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParamBool
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 103
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public bool GetParamBool(string paramName)
    parameters:
    - id: paramName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function GetParamBool(paramName As String) As Boolean
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  id: GetParamBool(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParamBool(KeyValuePair<Param, String>)
  nameWithType: InputResponse.GetParamBool(KeyValuePair<Param, String>)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.Collections.Generic.KeyValuePair<BennyKok.RuntimeDebug.DebugInput.Param, System.String>)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParamBool
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 105
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public bool GetParamBool(KeyValuePair<Param, string> entry)
    parameters:
    - id: entry
      type: System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
    return:
      type: System.Boolean
    content.vb: Public Function GetParamBool(entry As KeyValuePair(Of Param, String)) As Boolean
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool*
  nameWithType.vb: InputResponse.GetParamBool(KeyValuePair(Of Param, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool(System.Collections.Generic.KeyValuePair(Of BennyKok.RuntimeDebug.DebugInput.Param, System.String))
  name.vb: GetParamBool(KeyValuePair(Of Param, String))
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.String)
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.String)
  id: GetParamFloat(System.String)
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParamFloat(String)
  nameWithType: InputResponse.GetParamFloat(String)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParamFloat
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 113
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public float GetParamFloat(string paramName)
    parameters:
    - id: paramName
      type: System.String
    return:
      type: System.Single
    content.vb: Public Function GetParamFloat(paramName As String) As Single
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  id: GetParamFloat(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParamFloat(KeyValuePair<Param, String>)
  nameWithType: InputResponse.GetParamFloat(KeyValuePair<Param, String>)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.Collections.Generic.KeyValuePair<BennyKok.RuntimeDebug.DebugInput.Param, System.String>)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParamFloat
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 115
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public float GetParamFloat(KeyValuePair<Param, string> entry)
    parameters:
    - id: entry
      type: System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
    return:
      type: System.Single
    content.vb: Public Function GetParamFloat(entry As KeyValuePair(Of Param, String)) As Single
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat*
  nameWithType.vb: InputResponse.GetParamFloat(KeyValuePair(Of Param, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat(System.Collections.Generic.KeyValuePair(Of BennyKok.RuntimeDebug.DebugInput.Param, System.String))
  name.vb: GetParamFloat(KeyValuePair(Of Param, String))
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.String)
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.String)
  id: GetParamInt(System.String)
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParamInt(String)
  nameWithType: InputResponse.GetParamInt(String)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.String)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParamInt
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 127
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public int GetParamInt(string paramName)
    parameters:
    - id: paramName
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetParamInt(paramName As String) As Integer
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  commentId: M:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  id: GetParamInt(System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String})
  parent: BennyKok.RuntimeDebug.DebugInput.InputResponse
  langs:
  - csharp
  - vb
  name: GetParamInt(KeyValuePair<Param, String>)
  nameWithType: InputResponse.GetParamInt(KeyValuePair<Param, String>)
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.Collections.Generic.KeyValuePair<BennyKok.RuntimeDebug.DebugInput.Param, System.String>)
  type: Method
  source:
    remote:
      path: Runtime/Input/InputResponse.cs
      branch: master
      repo: https://gitlab.com/BennyKok/unity-runtime-debug-action.git
    id: GetParamInt
    path: ../Assets/Plugins/RuntimeDebugAction/Runtime/Input/InputResponse.cs
    startLine: 129
  assemblies:
  - com.bennykok.runtime-debug-action
  namespace: BennyKok.RuntimeDebug.DebugInput
  syntax:
    content: public int GetParamInt(KeyValuePair<Param, string> entry)
    parameters:
    - id: entry
      type: System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
    return:
      type: System.Int32
    content.vb: Public Function GetParamInt(entry As KeyValuePair(Of Param, String)) As Integer
  overload: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt*
  nameWithType.vb: InputResponse.GetParamInt(KeyValuePair(Of Param, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt(System.Collections.Generic.KeyValuePair(Of BennyKok.RuntimeDebug.DebugInput.Param, System.String))
  name.vb: GetParamInt(KeyValuePair(Of Param, String))
references:
- uid: BennyKok.RuntimeDebug.DebugInput
  commentId: N:BennyKok.RuntimeDebug.DebugInput
  name: BennyKok.RuntimeDebug.DebugInput
  nameWithType: BennyKok.RuntimeDebug.DebugInput
  fullName: BennyKok.RuntimeDebug.DebugInput
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
  commentId: T:System.Collections.Generic.Dictionary{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Param, String>
  nameWithType: Dictionary<Param, String>
  fullName: System.Collections.Generic.Dictionary<BennyKok.RuntimeDebug.DebugInput.Param, System.String>
  nameWithType.vb: Dictionary(Of Param, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of BennyKok.RuntimeDebug.DebugInput.Param, System.String)
  name.vb: Dictionary(Of Param, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.DebugInput.Param
    name: Param
    nameWithType: Param
    fullName: BennyKok.RuntimeDebug.DebugInput.Param
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.DebugInput.Param
    name: Param
    nameWithType: Param
    fullName: BennyKok.RuntimeDebug.DebugInput.Param
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.AllInputValid*
  commentId: Overload:BennyKok.RuntimeDebug.DebugInput.InputResponse.AllInputValid
  name: AllInputValid
  nameWithType: InputResponse.AllInputValid
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.AllInputValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.#ctor*
  commentId: Overload:BennyKok.RuntimeDebug.DebugInput.InputResponse.#ctor
  name: InputResponse
  nameWithType: InputResponse.InputResponse
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.InputResponse
- uid: BennyKok.RuntimeDebug.DebugInput.InputQuery
  commentId: T:BennyKok.RuntimeDebug.DebugInput.InputQuery
  parent: BennyKok.RuntimeDebug.DebugInput
  name: InputQuery
  nameWithType: InputQuery
  fullName: BennyKok.RuntimeDebug.DebugInput.InputQuery
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetObjectsForReflection*
  commentId: Overload:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetObjectsForReflection
  name: GetObjectsForReflection
  nameWithType: InputResponse.GetObjectsForReflection
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetObjectsForReflection
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParam*
  commentId: Overload:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParam
  name: GetParam
  nameWithType: InputResponse.GetParam
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParam
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
  commentId: T:System.Collections.Generic.KeyValuePair{BennyKok.RuntimeDebug.DebugInput.Param,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<Param, String>
  nameWithType: KeyValuePair<Param, String>
  fullName: System.Collections.Generic.KeyValuePair<BennyKok.RuntimeDebug.DebugInput.Param, System.String>
  nameWithType.vb: KeyValuePair(Of Param, String)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of BennyKok.RuntimeDebug.DebugInput.Param, System.String)
  name.vb: KeyValuePair(Of Param, String)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BennyKok.RuntimeDebug.DebugInput.Param
    name: Param
    nameWithType: Param
    fullName: BennyKok.RuntimeDebug.DebugInput.Param
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BennyKok.RuntimeDebug.DebugInput.Param
    name: Param
    nameWithType: Param
    fullName: BennyKok.RuntimeDebug.DebugInput.Param
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString*
  commentId: Overload:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString
  name: GetParamString
  nameWithType: InputResponse.GetParamString
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamString
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool*
  commentId: Overload:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool
  name: GetParamBool
  nameWithType: InputResponse.GetParamBool
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamBool
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat*
  commentId: Overload:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat
  name: GetParamFloat
  nameWithType: InputResponse.GetParamFloat
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt*
  commentId: Overload:BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt
  name: GetParamInt
  nameWithType: InputResponse.GetParamInt
  fullName: BennyKok.RuntimeDebug.DebugInput.InputResponse.GetParamInt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
